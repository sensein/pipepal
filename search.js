window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"pipepal": {"fullname": "pipepal", "modulename": "pipepal", "kind": "module", "doc": "<h1 id=\"the-pipepal-repo\">The <code>pipepal</code> repo</h1>\n\n<p><a href=\"https://github.com/sensein/pipepal/actions/workflows/test.yaml?query=branch%3Amain\"><img src=\"https://github.com/sensein/pipepal/actions/workflows/test.yaml/badge.svg?branch=main\" alt=\"Build\" /></a>\n<a href=\"https://codecov.io/gh/sensein/pipepal\"><img src=\"https://codecov.io/gh/sensein/pipepal/branch/main/graph/badge.svg?token=MFU1LM80ET\" alt=\"codecov\" /></a>\n<a href=\"https://github.com/astral-sh/ruff\"><img src=\"https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json\" alt=\"Ruff\" /></a></p>\n\n<p><a href=\"https://pypi.org/project/pipepal/\"><img src=\"https://img.shields.io/pypi/v/pipepal.svg\" alt=\"PyPI\" /></a>\n<a href=\"https://pypi.org/project/pipepal\"><img src=\"https://img.shields.io/pypi/pyversions/pipepal\" alt=\"Python Version\" /></a>\n<a href=\"https://opensource.org/licenses/Apache-2.0\"><img src=\"https://img.shields.io/pypi/l/pipepal\" alt=\"License\" /></a></p>\n\n<p><a href=\"https://sensein.github.io/pipepal\"><img src=\"https://img.shields.io/badge/api-docs-blue\" alt=\"pages\" /></a></p>\n\n<p>Welcome to the <code>pipepal</code> repo! This is a Python package for streamlining the processing and analysis of behavioral data, such as voice and speech patterns, with robust and reproducible methodologies. </p>\n\n<p><strong>Caution:</strong>: this package is still under development and may change rapidly over the next few weeks.</p>\n\n<h2 id=\"features\">Features</h2>\n\n<ul>\n<li><p><strong>Modular design</strong>: Utilize a variety of task-specific transformations that can be easily integrated or used standalone, allowing for flexible data manipulation and analysis strategies.</p></li>\n<li><p><strong>Pre-built pipelines</strong>: Access pre-configured pipelines combining multiple transformations tailored for common analysis tasks, which help in reducing setup time and effort.</p></li>\n<li><p><strong>Reproducibility</strong>: Ensures consistent outputs through the use of fixed seeds and version-controlled processing steps, making your results verifiable and easily comparable.</p></li>\n<li><p><strong>Easy integration</strong>: Designed to fit into existing workflows with minimal configuration, <code>pipepal</code> can be used alongside other data analysis tools and frameworks seamlessly.</p></li>\n<li><p><strong>Extensible</strong>: Open to modifications and contributions, the package can be expanded with custom transformations and pipelines to meet specific research needs. <u>Do you want to contribute? Please, reach out!</u></p></li>\n<li><p><strong>Comprehensive documentation</strong>: Comes with detailed documentation for all features and modules, including examples and guides on how to extend the package for other types of behavioral data analysis.</p></li>\n<li><p><strong>Performance Optimized</strong>: Efficiently processes large datasets with optimized code and algorithms, ensuring quick turnaround times even for complex analyses.</p></li>\n<li><p><strong>Interactive Examples</strong>: Includes Jupyter notebooks that provide practical examples of how <code>pipepal</code> can be implemented to derive insights from real-world data sets.</p></li>\n</ul>\n\n<p>Whether you're researching speech disorders, analyzing customer service calls, or studying communication patterns, <code>pipepal</code> provides the tools and flexibility needed to extract meaningful conclusions from your data.</p>\n\n<h2 id=\"installation\">Installation</h2>\n\n<p>Install this package via:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>pipepal\n</code></pre>\n</div>\n\n<p>Or get the newest development version via:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>git+https://github.com/sensein/pipepal.git\n</code></pre>\n</div>\n\n<h2 id=\"quick-start\">Quick start</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pipepal.app</span> <span class=\"kn\">import</span> <span class=\"n\">hello_world</span>\n\n<span class=\"n\">hello_world</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<h2 id=\"to-do\">To do:</h2>\n\n<ul>\n<li><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled> Integrating more audio tasks and moving functions from b2aiprep package:\n<ul>\n<li><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled> data_augmentation </li>\n<li><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled> data_representation</li>\n<li><input type=\"checkbox\" class=\"task-list-item-checkbox\" checked disabled> example_task</li>\n<li><input type=\"checkbox\" class=\"task-list-item-checkbox\" checked disabled> input_output</li>\n<li><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled> raw_signal_processing</li>\n<li><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled> speaker_diarization</li>\n<li><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled> speech emotion recognition</li>\n<li><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled> speech enhancement</li>\n<li><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled> speech_to_text</li>\n<li><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled> text_to_speech</li>\n<li><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled> voice conversion</li>\n</ul></li>\n<li><p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled> Integrating more video tasks:</p>\n\n<ul>\n<li><input type=\"checkbox\" class=\"task-list-item-checkbox\" checked disabled> input_output</li>\n</ul></li>\n<li><p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled> Preparing some pipelines with pydra</p></li>\n<li><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled> Populating the CLI</li>\n</ul>\n"}, "pipepal.app": {"fullname": "pipepal.app", "modulename": "pipepal.app", "kind": "module", "doc": "<p>This script defines a simple function that prints 'Hello World!' to the console.</p>\n\n<p>It then calls this function if the script is run as the main program.</p>\n"}, "pipepal.app.hello_world": {"fullname": "pipepal.app.hello_world", "modulename": "pipepal.app", "qualname": "hello_world", "kind": "function", "doc": "<p>Prints hello world.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "pipepal.audio": {"fullname": "pipepal.audio", "modulename": "pipepal.audio", "kind": "module", "doc": "<p>This module provides the implementation of pipepal audio.</p>\n"}, "pipepal.audio.tasks": {"fullname": "pipepal.audio.tasks", "modulename": "pipepal.audio.tasks", "kind": "module", "doc": "<p>This module provides the implementation of pipepal tasks for audio.</p>\n"}, "pipepal.audio.tasks.example_task": {"fullname": "pipepal.audio.tasks.example_task", "modulename": "pipepal.audio.tasks.example_task", "kind": "module", "doc": "<p>This module provides the implementation of ExampleTask.</p>\n"}, "pipepal.audio.tasks.example_task.abstract_service": {"fullname": "pipepal.audio.tasks.example_task.abstract_service", "modulename": "pipepal.audio.tasks.example_task.abstract_service", "kind": "module", "doc": "<p>This module defines an abstract service for the task.</p>\n"}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"fullname": "pipepal.audio.tasks.example_task.abstract_service.AbstractService", "modulename": "pipepal.audio.tasks.example_task.abstract_service", "qualname": "AbstractService", "kind": "class", "doc": "<p>Abstract base class for services.</p>\n\n<p>This class provides a template for services with preprocess, process,\nand postprocess methods.</p>\n", "bases": "abc.ABC"}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess": {"fullname": "pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess", "modulename": "pipepal.audio.tasks.example_task.abstract_service", "qualname": "AbstractService.preprocess", "kind": "function", "doc": "<p>Preprocess input data.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>data:</strong>  The input data to preprocess.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The preprocessed data.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"fullname": "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process", "modulename": "pipepal.audio.tasks.example_task.abstract_service", "qualname": "AbstractService.process", "kind": "function", "doc": "<p>Process input data.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>data:</strong>  The input data to process.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A dictionary with the processed output.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"fullname": "pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess", "modulename": "pipepal.audio.tasks.example_task.abstract_service", "qualname": "AbstractService.postprocess", "kind": "function", "doc": "<p>Postprocess the processed data.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong>:  The data to postprocess.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The postprocessed data.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.audio.tasks.example_task.interface": {"fullname": "pipepal.audio.tasks.example_task.interface", "modulename": "pipepal.audio.tasks.example_task.interface", "kind": "module", "doc": "<p>This module defines an API for managing services related to the example task.</p>\n"}, "pipepal.audio.tasks.example_task.interface.Interface": {"fullname": "pipepal.audio.tasks.example_task.interface.Interface", "modulename": "pipepal.audio.tasks.example_task.interface", "qualname": "Interface", "kind": "class", "doc": "<p>A factory class for creating and managing instances of services related to the example task.</p>\n\n<p>This class facilitates the retrieval and singleton management of service instances based on\na unique identifier derived from the service data. The main functionality is provided through\nthe <code>run</code> method which processes input through a comprehensive workflow including\npreprocessing, processing, and postprocessing phases, using the specified service instance.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>_instances (Dict[str, Any]):</strong>  A class-level dictionary that caches service instances\nto ensure they are singleton per type, indexed by a unique key.</li>\n</ul>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">exampleTask</span> <span class=\"o\">=</span> <span class=\"n\">Interface</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">example_response</span> <span class=\"o\">=</span> <span class=\"n\">exampleTask</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">({</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;service&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n<span class=\"gp\">... </span>        <span class=\"s2\">&quot;service_name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ExampleService&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>        <span class=\"s2\">&quot;model_checkpoint&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;model.ckpt&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>        <span class=\"s2\">&quot;model_version&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;1.0&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"p\">},</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;data&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n<span class=\"gp\">... </span>        <span class=\"s2\">&quot;hello&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;world&quot;</span>\n<span class=\"gp\">... </span>    <span class=\"p\">}</span>\n<span class=\"gp\">... </span><span class=\"p\">})</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">example_response</span><span class=\"p\">)</span>\n<span class=\"go\">The output from the ExampleService after processing the input data.</span>\n</code></pre>\n  </div>\n</blockquote>\n", "bases": "pipepal.utils.abstract_component.AbstractComponent"}, "pipepal.audio.tasks.example_task.interface.Interface.__init__": {"fullname": "pipepal.audio.tasks.example_task.interface.Interface.__init__", "modulename": "pipepal.audio.tasks.example_task.interface", "qualname": "Interface.__init__", "kind": "function", "doc": "<p>Initialize the Interface class with the path to the directory where this file is located.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"fullname": "pipepal.audio.tasks.example_task.interface.Interface.get_service", "modulename": "pipepal.audio.tasks.example_task.interface", "qualname": "Interface.get_service", "kind": "function", "doc": "<p>Retrieves or creates a service instance based on the provided service data.</p>\n\n<p>This method ensures that each service type, identified by a composite key\n(including the service name, model checkpoint, and version), has only one instance.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>service_data (Dict[str, Any]):</strong>  A dictionary containing the service configuration,\nwhich must include 'service_name', and may include 'model_checkpoint' and 'model_version'\nfor specific service setups.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Any: An instance of the requested service.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If the 'service_name' in service_data is unsupported or not recognized.</li>\n</ul>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">service_data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;service_name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ExampleService&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;model_checkpoint&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;model.ckpt&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;model_version&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;1.0&quot;</span>\n<span class=\"gp\">... </span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">service</span> <span class=\"o\">=</span> <span class=\"n\">Interface</span><span class=\"o\">.</span><span class=\"n\">get_service</span><span class=\"p\">(</span><span class=\"n\">service_data</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">service</span><span class=\"p\">)</span>\n<span class=\"go\">Instance of ExampleService configured with model checkpoint &#39;model.ckpt&#39; and version 1.0</span>\n</code></pre>\n  </div>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">service_data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"fullname": "pipepal.audio.tasks.example_task.interface.Interface.run", "modulename": "pipepal.audio.tasks.example_task.interface", "qualname": "Interface.run", "kind": "function", "doc": "<p>Processes input through a workflow of preprocessing, processing, and postprocessing.</p>\n\n<p>This method uses a service instance, which is fetched based on the service details provided\nin 'input', to run the given data through the service's workflow. This includes preprocessing\nthe data, processing it according to the service's logic, and then postprocessing results.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_obj (Dict[str, Any]):</strong>  A dictionary containing:\n<ul>\n<li>'service': A dictionary with the service configuration.</li>\n<li>'data': The data to be processed by the service.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Any: The output of the service after the workflow has been applied to the input.</p>\n</blockquote>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">input_data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;service&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n<span class=\"gp\">... </span>        <span class=\"s2\">&quot;service_name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ExampleService&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>        <span class=\"s2\">&quot;model_checkpoint&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;model.ckpt&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>        <span class=\"s2\">&quot;model_version&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;1.0&quot;</span>\n<span class=\"gp\">... </span>    <span class=\"p\">},</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;data&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;hello&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;world&quot;</span><span class=\"p\">}</span>\n<span class=\"gp\">... </span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">exampleTask</span> <span class=\"o\">=</span> <span class=\"n\">Interface</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">exampleTask</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">input_data</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">output</span><span class=\"p\">)</span>\n<span class=\"go\">The processed data.</span>\n</code></pre>\n  </div>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">input_obj</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "pipepal.audio.tasks.example_task.services": {"fullname": "pipepal.audio.tasks.example_task.services", "modulename": "pipepal.audio.tasks.example_task.services", "kind": "module", "doc": "<p>This module provides the implementation of ExampleTask.</p>\n"}, "pipepal.audio.tasks.example_task.services.example_service": {"fullname": "pipepal.audio.tasks.example_task.services.example_service", "modulename": "pipepal.audio.tasks.example_task.services.example_service", "kind": "module", "doc": "<p>This module provides the implementation of ExampleService for ExampleTask.</p>\n"}, "pipepal.audio.tasks.example_task.services.example_service.service": {"fullname": "pipepal.audio.tasks.example_task.services.example_service.service", "modulename": "pipepal.audio.tasks.example_task.services.example_service.service", "kind": "module", "doc": "<p>This module implements an example service class which extends the AbstractService.</p>\n\n<p>The service is designed to demonstrate a typical implementation setup where\npreprocessing, processing, and postprocessing steps are defined to handle data\nin a manner specific to the service's requirements.</p>\n\n<h6 id=\"example\">Example:</h6>\n\n<blockquote>\n  <p>Demonstrate how to use the ExampleService:</p>\n  \n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">path.to.this.module</span> <span class=\"kn\">import</span> <span class=\"n\">Service</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">input_obj</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n<span class=\"go\">    &quot;data&quot;: {</span>\n<span class=\"go\">        &quot;hello&quot;: &quot;world&quot;</span>\n<span class=\"go\">    },</span>\n<span class=\"go\">    &quot;service&quot;: {</span>\n<span class=\"go\">        &quot;service_name&quot;: &quot;ExampleService&quot;, </span>\n<span class=\"go\">        &quot;model_checkpoint&quot;: &quot;model.ckpt&quot;,</span>\n<span class=\"go\">        &quot;model_version&quot;: &quot;1.0&quot;,</span>\n<span class=\"go\">    }</span>\n<span class=\"go\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">service</span> <span class=\"o\">=</span> <span class=\"n\">Service</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">preprocessing_output</span> <span class=\"o\">=</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"n\">preprocess</span><span class=\"p\">(</span><span class=\"n\">input_obj</span><span class=\"p\">[</span><span class=\"s2\">&quot;data&quot;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">processing_output</span> <span class=\"o\">=</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"n\">process</span><span class=\"p\">(</span><span class=\"n\">preprocessing_output</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">postprocessing_output</span> <span class=\"o\">=</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"n\">postprocess</span><span class=\"p\">(</span><span class=\"n\">processing_output</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">postprocessing_output</span><span class=\"p\">)</span>\n<span class=\"go\">{&#39;output&#39;: &#39;ExampleService output&#39;}</span>\n</code></pre>\n  </div>\n</blockquote>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>NAME (str):</strong>  A class attribute which gives the service a name, used internally.</li>\n</ul>\n"}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"fullname": "pipepal.audio.tasks.example_task.services.example_service.service.Service", "modulename": "pipepal.audio.tasks.example_task.services.example_service.service", "qualname": "Service", "kind": "class", "doc": "<p>Example service that extends AbstractService to demonstrate custom processing steps.</p>\n\n<p>This service class exemplifies a basic structure of a service in a system designed\nfor processing data through computational steps: preprocess, process, and postprocess.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>NAME (str):</strong>  The public name of the service, intended for identification in registries.</li>\n</ul>\n", "bases": "pipepal.audio.tasks.example_task.abstract_service.AbstractService"}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"fullname": "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__", "modulename": "pipepal.audio.tasks.example_task.services.example_service.service", "qualname": "Service.__init__", "kind": "function", "doc": "<p>Initialize the service class with the path to the base directory.</p>\n\n<p>The initialization involves setting up the base directory and potentially other\nconfigurations necessary for the service's operations.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>configs (Dict[str, Any]):</strong>  The configs dictionary for the service.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">configs</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span>)</span>"}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.NAME": {"fullname": "pipepal.audio.tasks.example_task.services.example_service.service.Service.NAME", "modulename": "pipepal.audio.tasks.example_task.services.example_service.service", "qualname": "Service.NAME", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;ExampleService&#x27;"}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"fullname": "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess", "modulename": "pipepal.audio.tasks.example_task.services.example_service.service", "qualname": "Service.preprocess", "kind": "function", "doc": "<p>Preprocess the input data to fit the requirements of this service's processing step.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>data (Dict[str, Any]):</strong>  The input data to preprocess, expected to be in dictionary format.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, Any]: The preprocessed data, adjusted according to the service's needs. This\n       implementation simply passes the data through without modification.</p>\n</blockquote>\n\n<h6 id=\"example\">Example:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">service</span><span class=\"o\">.</span><span class=\"n\">preprocess</span><span class=\"p\">({</span><span class=\"s2\">&quot;hello&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;world&quot;</span><span class=\"p\">})</span>\n<span class=\"go\">{&#39;hello&#39;: &#39;world&#39;}</span>\n</code></pre>\n  </div>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"fullname": "pipepal.audio.tasks.example_task.services.example_service.service.Service.process", "modulename": "pipepal.audio.tasks.example_task.services.example_service.service", "qualname": "Service.process", "kind": "function", "doc": "<p>Process the input data to produce a service-specific output.</p>\n\n<p>This method is the core of the service where the main data manipulation happens. The current\nimplementation outputs a placeholder dictionary for demonstration purposes.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>data (Dict[str, Any]):</strong>  The preprocessed data ready for processing.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, Any]: A dictionary containing 'output' key with a string value representing\n                  the result of data processing.</p>\n</blockquote>\n\n<h6 id=\"example\">Example:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">service</span><span class=\"o\">.</span><span class=\"n\">process</span><span class=\"p\">({</span><span class=\"s2\">&quot;hello&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;preprocessed world&quot;</span><span class=\"p\">})</span>\n<span class=\"go\">{&#39;output&#39;: &#39;ExampleService output&#39;}</span>\n</code></pre>\n  </div>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"fullname": "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess", "modulename": "pipepal.audio.tasks.example_task.services.example_service.service", "qualname": "Service.postprocess", "kind": "function", "doc": "<p>Postprocess the processed data to format the output as required by downstream services or storage solutions.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>data (Dict[str, Any]):</strong>  The data to postprocess after it has been processed. Typically involves\nfinal adjustments before sending the data to the next step or storing it.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, Any]: The postprocessed data, which in this case is the same as the input data.</p>\n</blockquote>\n\n<h6 id=\"example\">Example:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">service</span><span class=\"o\">.</span><span class=\"n\">postprocess</span><span class=\"p\">({</span><span class=\"s1\">&#39;output&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;ExampleService output&#39;</span><span class=\"p\">})</span>\n<span class=\"go\">{&#39;output&#39;: &#39;ExampleService output&#39;}</span>\n</code></pre>\n  </div>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.audio.tasks.input_output": {"fullname": "pipepal.audio.tasks.input_output", "modulename": "pipepal.audio.tasks.input_output", "kind": "module", "doc": "<p>This module provides the implementation of IO for videos.</p>\n"}, "pipepal.audio.tasks.input_output.abstract_service": {"fullname": "pipepal.audio.tasks.input_output.abstract_service", "modulename": "pipepal.audio.tasks.input_output.abstract_service", "kind": "module", "doc": "<p>This module defines an abstract service for the audio IO task.</p>\n"}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"fullname": "pipepal.audio.tasks.input_output.abstract_service.AbstractService", "modulename": "pipepal.audio.tasks.input_output.abstract_service", "qualname": "AbstractService", "kind": "class", "doc": "<p>Abstract base class for audio IO services.</p>\n\n<p>This class provides a template for services that handle audio input/output operations,\nensuring that all essential methods such as reading audio from disk, saving datasets to disk,\nand uploading datasets to the Hugging Face Hub are implemented.</p>\n", "bases": "abc.ABC"}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"fullname": "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk", "modulename": "pipepal.audio.tasks.input_output.abstract_service", "qualname": "AbstractService.read_audios_from_disk", "kind": "function", "doc": "<p>Reads audio files from disk and creates a dataset.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>data (Dict[str, Any]):</strong>  A dictionary with a key 'files' which is a list of file paths to audio files.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, Any]: A dictionary with a single key 'output', containing the dataset created from the audio files.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If the 'files' key is not in the input dictionary.</li>\n<li><strong>FileNotFoundError:</strong>  If any audio files listed in the 'files' key do not exist.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"fullname": "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk", "modulename": "pipepal.audio.tasks.input_output.abstract_service", "qualname": "AbstractService.save_HF_dataset_to_disk", "kind": "function", "doc": "<p>Saves a Hugging Face <code>Dataset</code> object to disk.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_obj (Dict[str, Any]):</strong>  A dictionary containing:\n<ul>\n<li>'dataset': A <code>Dataset</code> object to save.</li>\n<li>'output_path': A string representing the path to save the dataset to.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, Any]: A dictionary confirming the output status.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">input_obj</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"fullname": "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub", "modulename": "pipepal.audio.tasks.input_output.abstract_service", "qualname": "AbstractService.upload_HF_dataset_to_HF_hub", "kind": "function", "doc": "<p>Uploads a Hugging Face <code>Dataset</code> object to the Hugging Face Hub.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_obj (Dict[str, Any]):</strong>  A dictionary containing:\n<ul>\n<li>'dataset': A <code>Dataset</code> object to upload.</li>\n<li>'output_uri': A string representing the URI to the remote directory where the dataset will be uploaded.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, Any]: A dictionary confirming the upload status.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">input_obj</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"fullname": "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset", "modulename": "pipepal.audio.tasks.input_output.abstract_service", "qualname": "AbstractService.read_local_HF_dataset", "kind": "function", "doc": "<p>Loads a Hugging Face <code>Dataset</code> object from a local directory.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_obj (Dict[str, Any]):</strong>  A dictionary containing:\n<ul>\n<li>path (str): The file path to the local directory containing the dataset.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, Any]: A dictionary with a key 'output', containing the loaded <code>Dataset</code> object.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">input_obj</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"fullname": "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub", "modulename": "pipepal.audio.tasks.input_output.abstract_service", "qualname": "AbstractService.read_HF_dataset_from_HF_hub", "kind": "function", "doc": "<p>Loads a Hugging Face <code>Dataset</code> object from the Hugging Face Hub.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_obj (Dict[str, Any]):</strong>  A dictionary containing:\n<ul>\n<li>uri (str): The URI to the dataset on the Hugging Face Hub.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, Any]: A dictionary with a key 'output', containing the loaded <code>Dataset</code> object.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">input_obj</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.audio.tasks.input_output.interface": {"fullname": "pipepal.audio.tasks.input_output.interface", "modulename": "pipepal.audio.tasks.input_output.interface", "kind": "module", "doc": "<p>This module defines an API for the task.</p>\n"}, "pipepal.audio.tasks.input_output.interface.Interface": {"fullname": "pipepal.audio.tasks.input_output.interface.Interface", "modulename": "pipepal.audio.tasks.input_output.interface", "qualname": "Interface", "kind": "class", "doc": "<p>A factory class for creating and managing service instances.</p>\n\n<p>It ensures a single instance per service type based on a unique key.</p>\n", "bases": "pipepal.utils.abstract_component.AbstractComponent"}, "pipepal.audio.tasks.input_output.interface.Interface.__init__": {"fullname": "pipepal.audio.tasks.input_output.interface.Interface.__init__", "modulename": "pipepal.audio.tasks.input_output.interface", "qualname": "Interface.__init__", "kind": "function", "doc": "<p>Initialize the Interface class with the path to the base directory.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"fullname": "pipepal.audio.tasks.input_output.interface.Interface.get_service", "modulename": "pipepal.audio.tasks.input_output.interface", "qualname": "Interface.get_service", "kind": "function", "doc": "<p>Retrieves or creates a service instance based on the provided service data.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>service_data (Dict[str, Any]):</strong>  Data required to identify or create the service instance.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Any: An instance of the requested service.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If the service name is unsupported.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">service_data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"fullname": "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk", "modulename": "pipepal.audio.tasks.input_output.interface", "qualname": "Interface.read_audios_from_disk", "kind": "function", "doc": "<p>Processes input through a workflow.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input (Dict[str, Any]):</strong>  Input data containing service information and data to process.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Any: The postprocessed output from the service.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">input</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"fullname": "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk", "modulename": "pipepal.audio.tasks.input_output.interface", "qualname": "Interface.save_HF_dataset_to_disk", "kind": "function", "doc": "<p>Saves HF dataset to disk.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input (Dict[str, Any]):</strong>  Input data containing service information and data to process.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Any: The postprocessed output from the service.</p>\n</blockquote>\n\n<h6 id=\"todo\">Todo:</h6>\n\n<blockquote>\n  <ul>\n  <li>This method is not audio specific and may be moved out of this class.</li>\n  </ul>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">input</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"fullname": "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub", "modulename": "pipepal.audio.tasks.input_output.interface", "qualname": "Interface.upload_HF_dataset_to_HF_hub", "kind": "function", "doc": "<p>Uploads HF dataset to HF hub.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input (Dict[str, Any]):</strong>  Input data containing service information and data to process.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Any: The postprocessed output from the service.</p>\n</blockquote>\n\n<h6 id=\"todo\">Todo:</h6>\n\n<blockquote>\n  <ul>\n  <li>This method is not audio specific and may be moved out of this class.</li>\n  </ul>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">input</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"fullname": "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset", "modulename": "pipepal.audio.tasks.input_output.interface", "qualname": "Interface.read_local_HF_dataset", "kind": "function", "doc": "<p>Reads HF dataset from disk.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input (Dict[str, Any]):</strong>  Input data containing service information and data to process.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Any: The postprocessed output from the service.</p>\n</blockquote>\n\n<h6 id=\"todo\">Todo:</h6>\n\n<blockquote>\n  <ul>\n  <li>This method is not audio specific and may be moved out of this class.</li>\n  </ul>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">input</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"fullname": "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub", "modulename": "pipepal.audio.tasks.input_output.interface", "qualname": "Interface.read_HF_dataset_from_HF_hub", "kind": "function", "doc": "<p>Reads HF dataset from HF hub.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input (Dict[str, Any]):</strong>  Input data containing service information and data to process.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Any: The postprocessed output from the service.</p>\n</blockquote>\n\n<h6 id=\"todo\">Todo:</h6>\n\n<blockquote>\n  <ul>\n  <li>This method is not audio specific and may be moved out of this class.</li>\n  </ul>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">input</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.audio.tasks.input_output.services": {"fullname": "pipepal.audio.tasks.input_output.services", "modulename": "pipepal.audio.tasks.input_output.services", "kind": "module", "doc": "<p>This module provides the implementation of IO for videos.</p>\n"}, "pipepal.audio.tasks.input_output.services.datasets": {"fullname": "pipepal.audio.tasks.input_output.services.datasets", "modulename": "pipepal.audio.tasks.input_output.services.datasets", "kind": "module", "doc": "<p>This module provides the implementation of ExampleService for IO task.</p>\n"}, "pipepal.audio.tasks.input_output.services.datasets.service": {"fullname": "pipepal.audio.tasks.input_output.services.datasets.service", "modulename": "pipepal.audio.tasks.input_output.services.datasets.service", "kind": "module", "doc": "<p>This module implements an example service for the task.</p>\n"}, "pipepal.audio.tasks.input_output.services.datasets.service.Service": {"fullname": "pipepal.audio.tasks.input_output.services.datasets.service.Service", "modulename": "pipepal.audio.tasks.input_output.services.datasets.service", "qualname": "Service", "kind": "class", "doc": "<p>Datasets service that extends AbstractService.</p>\n", "bases": "pipepal.audio.tasks.input_output.abstract_service.AbstractService"}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"fullname": "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__", "modulename": "pipepal.audio.tasks.input_output.services.datasets.service", "qualname": "Service.__init__", "kind": "function", "doc": "<p>Initialize the service with given configurations.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>configs:</strong>  A dictionary of configurations for the service.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">configs</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span>)</span>"}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.NAME": {"fullname": "pipepal.audio.tasks.input_output.services.datasets.service.Service.NAME", "modulename": "pipepal.audio.tasks.input_output.services.datasets.service", "qualname": "Service.NAME", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;Datasets&#x27;"}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"fullname": "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk", "modulename": "pipepal.audio.tasks.input_output.services.datasets.service", "qualname": "Service.read_audios_from_disk", "kind": "function", "doc": "<p>Reads audio files from disk and creates a Hugging Face <code>Dataset</code> object.</p>\n\n<p>This function checks if all audio files listed under the 'files' key in the input dictionary exist on disk.\nIf all files are found, it creates a Dataset object where each file is handled as an audio file. The resulting\ndataset is then returned inside a dictionary under the key 'output'.</p>\n\n<p>Parameters:\ndata (Dict[str, Any]): A dictionary with a key 'files' which is a list of strings. Each string should be\n                    the file path to an audio file.</p>\n\n<p>Returns:\nDict[str, Any]: A dictionary with a single key 'output', which contains the <code>Dataset</code> object. The 'audio'\n                column of this dataset is of type <code>datasets.Audio</code>.</p>\n\n<p>Raises:\nValueError: If the 'files' key is not in the input dictionary.\nFileNotFoundError: If any of the audio files listed in the 'files' key do not exist.</p>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;files&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;path/to/audio1.wav&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;path/to/audio2.wav&quot;</span><span class=\"p\">]}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">output_dataset</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">read_audios_from_disk</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">output_dataset</span><span class=\"p\">[</span><span class=\"s2\">&quot;output&quot;</span><span class=\"p\">]))</span>\n<span class=\"go\">&lt;class &#39;datasets.arrow_dataset.Dataset&#39;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">output_dataset</span><span class=\"p\">[</span><span class=\"s2\">&quot;output&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">column_names</span><span class=\"p\">)</span>\n<span class=\"go\">[&#39;audio&#39;]</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"fullname": "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk", "modulename": "pipepal.audio.tasks.input_output.services.datasets.service", "qualname": "Service.save_HF_dataset_to_disk", "kind": "function", "doc": "<p>Saves a Hugging Face <code>Dataset</code> object to disk.</p>\n\n<p>Parameters:\ninput_obj (Dict[str, Any]): A dictionary with \n    - a key 'dataset' which is a <code>Dataset</code> object,\n    - a key 'output_path' which is a string representing the path to the output directory.</p>\n\n<p>Returns:\nNone</p>\n\n<p>Todo:</p>\n\n<ul>\n<li>Add error handling</li>\n<li>Add output format as an optional parameter</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">input_obj</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"fullname": "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub", "modulename": "pipepal.audio.tasks.input_output.services.datasets.service", "qualname": "Service.upload_HF_dataset_to_HF_hub", "kind": "function", "doc": "<p>Uploads a Hugging Face <code>Dataset</code> object to the Hugging Face Hub.</p>\n\n<p>Parameters:\ninput_obj (Dict[str, Any]): A dictionary with \n    - a key 'dataset' which is a <code>Dataset</code> object,\n    - a key 'output_uri' which is a string representing the URI to the remote directory.</p>\n\n<p>Returns:\nNone</p>\n\n<p>Todo:</p>\n\n<ul>\n<li>Add error handling</li>\n<li>Add output format as an optional parameter</li>\n<li>Add token handling for private HF repositories</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">input_obj</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"fullname": "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset", "modulename": "pipepal.audio.tasks.input_output.services.datasets.service", "qualname": "Service.read_local_HF_dataset", "kind": "function", "doc": "<p>Loads a Hugging Face <code>Dataset</code> object from a local directory.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_obj (Dict[str, Any]):</strong>  A dictionary containing:\n<ul>\n<li>path (str): The file path to the local directory containing the dataset.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, Any]: A dictionary with a key 'output', containing the loaded <code>Dataset</code> object.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">input_obj</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"fullname": "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub", "modulename": "pipepal.audio.tasks.input_output.services.datasets.service", "qualname": "Service.read_HF_dataset_from_HF_hub", "kind": "function", "doc": "<p>Loads a Hugging Face <code>Dataset</code> object from the Hugging Face Hub.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_obj (Dict[str, Any]):</strong>  A dictionary containing:\n<ul>\n<li>uri (str): The URI to the dataset on the Hugging Face Hub.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, Any]: A dictionary with a key 'output', containing the loaded <code>Dataset</code> object.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">input_obj</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.cli": {"fullname": "pipepal.cli", "modulename": "pipepal.cli", "kind": "module", "doc": "<p>This module defines CLI commands for the PipePal application.</p>\n"}, "pipepal.cli.main": {"fullname": "pipepal.cli.main", "modulename": "pipepal.cli", "qualname": "main", "kind": "variable", "doc": "<p>Define the main CLI group.</p>\n", "default_value": "&lt;Group main&gt;"}, "pipepal.cli.hello_world": {"fullname": "pipepal.cli.hello_world", "modulename": "pipepal.cli", "qualname": "hello_world", "kind": "variable", "doc": "<p>Execute the hello_world command from the app module.</p>\n", "default_value": "&lt;Command hello-world&gt;"}, "pipepal.utils": {"fullname": "pipepal.utils", "modulename": "pipepal.utils", "kind": "module", "doc": "<p>This module provides the implementation of pipepal utilities.</p>\n"}, "pipepal.utils.abstract_component": {"fullname": "pipepal.utils.abstract_component", "modulename": "pipepal.utils.abstract_component", "kind": "module", "doc": "<p>This module defines an abstract base component for schema validation.</p>\n\n<p>It enforces input and output validation against specified JSON schemas for deriving classes.\nUtilities for schema validation, UUID generation based on data, and execution time measurement\nfor methods are included. The purpose is to provide a structured approach to implementing components\nwith validated inputs and outputs according to predefined schemas.</p>\n"}, "pipepal.utils.abstract_component.AbstractComponent": {"fullname": "pipepal.utils.abstract_component.AbstractComponent", "modulename": "pipepal.utils.abstract_component", "qualname": "AbstractComponent", "kind": "class", "doc": "<p>Abstract base class for components with JSON schema validation.</p>\n\n<p>This class provides mechanisms for validating inputs and outputs against specified JSON schemas.\nIt includes methods for reading schemas, validating data, generating UUIDs from data, and\nmeasuring method execution times.</p>\n", "bases": "abc.ABC"}, "pipepal.utils.abstract_component.AbstractComponent.__init__": {"fullname": "pipepal.utils.abstract_component.AbstractComponent.__init__", "modulename": "pipepal.utils.abstract_component", "qualname": "AbstractComponent.__init__", "kind": "function", "doc": "<p>Initializes the component with paths to input and output JSON schemas.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">input_schema_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;schemas/__FUNCTION_NAME_PLACEHOLDER__/input.json&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">output_schema_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;schemas/__FUNCTION_NAME_PLACEHOLDER__/output.json&#39;</span></span>)</span>"}, "pipepal.utils.abstract_component.AbstractComponent.base_dir": {"fullname": "pipepal.utils.abstract_component.AbstractComponent.base_dir", "modulename": "pipepal.utils.abstract_component", "qualname": "AbstractComponent.base_dir", "kind": "variable", "doc": "<p></p>\n"}, "pipepal.utils.abstract_component.AbstractComponent.base_input_schema": {"fullname": "pipepal.utils.abstract_component.AbstractComponent.base_input_schema", "modulename": "pipepal.utils.abstract_component", "qualname": "AbstractComponent.base_input_schema", "kind": "variable", "doc": "<p></p>\n"}, "pipepal.utils.abstract_component.AbstractComponent.base_output_schema": {"fullname": "pipepal.utils.abstract_component.AbstractComponent.base_output_schema", "modulename": "pipepal.utils.abstract_component", "qualname": "AbstractComponent.base_output_schema", "kind": "variable", "doc": "<p></p>\n"}, "pipepal.utils.abstract_component.AbstractComponent.schema_validator": {"fullname": "pipepal.utils.abstract_component.AbstractComponent.schema_validator", "modulename": "pipepal.utils.abstract_component", "qualname": "AbstractComponent.schema_validator", "kind": "function", "doc": "<p>Decorator to validate input and output against schemas.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">func</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Callable</span>:</span></span>", "funcdef": "def"}, "pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"fullname": "pipepal.utils.abstract_component.AbstractComponent.read_json_schema", "modulename": "pipepal.utils.abstract_component", "qualname": "AbstractComponent.read_json_schema", "kind": "function", "doc": "<p>Reads and returns a JSON schema from a file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"fullname": "pipepal.utils.abstract_component.AbstractComponent.get_data_uuid", "modulename": "pipepal.utils.abstract_component", "qualname": "AbstractComponent.get_data_uuid", "kind": "function", "doc": "<p>Generates a UUID for a given data based on its SHA-256 hash.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">uuid</span><span class=\"o\">.</span><span class=\"n\">UUID</span>:</span></span>", "funcdef": "def"}, "pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"fullname": "pipepal.utils.abstract_component.AbstractComponent.get_response_time", "modulename": "pipepal.utils.abstract_component", "qualname": "AbstractComponent.get_response_time", "kind": "function", "doc": "<p>Decorator to measure and append response time information to a method's result.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">func</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Callable</span>:</span></span>", "funcdef": "def"}, "pipepal.utils.functions": {"fullname": "pipepal.utils.functions", "modulename": "pipepal.utils.functions", "kind": "module", "doc": "<p>This module is for utility functions.</p>\n"}, "pipepal.video": {"fullname": "pipepal.video", "modulename": "pipepal.video", "kind": "module", "doc": "<p>This module provides the implementation of pipepal video.</p>\n"}, "pipepal.video.tasks": {"fullname": "pipepal.video.tasks", "modulename": "pipepal.video.tasks", "kind": "module", "doc": "<p>This module provides the implementation of pipepal tasks for audio.</p>\n"}, "pipepal.video.tasks.example_task": {"fullname": "pipepal.video.tasks.example_task", "modulename": "pipepal.video.tasks.example_task", "kind": "module", "doc": "<p>This module provides the implementation of ExampleTask.</p>\n"}, "pipepal.video.tasks.example_task.abstract_service": {"fullname": "pipepal.video.tasks.example_task.abstract_service", "modulename": "pipepal.video.tasks.example_task.abstract_service", "kind": "module", "doc": "<p>This module defines an abstract service for the task.</p>\n"}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"fullname": "pipepal.video.tasks.example_task.abstract_service.AbstractService", "modulename": "pipepal.video.tasks.example_task.abstract_service", "qualname": "AbstractService", "kind": "class", "doc": "<p>Abstract base class for services.</p>\n\n<p>This class provides a template for services with preprocess, process,\nand postprocess methods.</p>\n", "bases": "abc.ABC"}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess": {"fullname": "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess", "modulename": "pipepal.video.tasks.example_task.abstract_service", "qualname": "AbstractService.preprocess", "kind": "function", "doc": "<p>Preprocess input data.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>data:</strong>  The input data to preprocess.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The preprocessed data.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"fullname": "pipepal.video.tasks.example_task.abstract_service.AbstractService.process", "modulename": "pipepal.video.tasks.example_task.abstract_service", "qualname": "AbstractService.process", "kind": "function", "doc": "<p>Process input data.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>data:</strong>  The input data to process.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A dictionary with the processed output.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"fullname": "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess", "modulename": "pipepal.video.tasks.example_task.abstract_service", "qualname": "AbstractService.postprocess", "kind": "function", "doc": "<p>Postprocess the processed data.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong>:  The data to postprocess.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The postprocessed data.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.video.tasks.example_task.interface": {"fullname": "pipepal.video.tasks.example_task.interface", "modulename": "pipepal.video.tasks.example_task.interface", "kind": "module", "doc": "<p>This module defines an API for managing services related to the example task.</p>\n"}, "pipepal.video.tasks.example_task.interface.Interface": {"fullname": "pipepal.video.tasks.example_task.interface.Interface", "modulename": "pipepal.video.tasks.example_task.interface", "qualname": "Interface", "kind": "class", "doc": "<p>A factory class for creating and managing instances of services related to the example task.</p>\n\n<p>This class facilitates the retrieval and singleton management of service instances based on\na unique identifier derived from the service data. The main functionality is provided through\nthe <code>run</code> method which processes input through a comprehensive workflow including\npreprocessing, processing, and postprocessing phases, using the specified service instance.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>_instances (Dict[str, Any]):</strong>  A class-level dictionary that caches service instances\nto ensure they are singleton per type, indexed by a unique key.</li>\n</ul>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">exampleTask</span> <span class=\"o\">=</span> <span class=\"n\">Interface</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">example_response</span> <span class=\"o\">=</span> <span class=\"n\">exampleTask</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">({</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;service&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n<span class=\"gp\">... </span>        <span class=\"s2\">&quot;service_name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ExampleService&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>        <span class=\"s2\">&quot;model_checkpoint&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;model.ckpt&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>        <span class=\"s2\">&quot;model_version&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;1.0&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"p\">},</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;data&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n<span class=\"gp\">... </span>        <span class=\"s2\">&quot;hello&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;world&quot;</span>\n<span class=\"gp\">... </span>    <span class=\"p\">}</span>\n<span class=\"gp\">... </span><span class=\"p\">})</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">example_response</span><span class=\"p\">)</span>\n<span class=\"go\">The output from the ExampleService after processing the input data.</span>\n</code></pre>\n  </div>\n</blockquote>\n", "bases": "pipepal.utils.abstract_component.AbstractComponent"}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"fullname": "pipepal.video.tasks.example_task.interface.Interface.__init__", "modulename": "pipepal.video.tasks.example_task.interface", "qualname": "Interface.__init__", "kind": "function", "doc": "<p>Initialize the Interface class with the path to the directory where this file is located.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"fullname": "pipepal.video.tasks.example_task.interface.Interface.get_service", "modulename": "pipepal.video.tasks.example_task.interface", "qualname": "Interface.get_service", "kind": "function", "doc": "<p>Retrieves or creates a service instance based on the provided service data.</p>\n\n<p>This method ensures that each service type, identified by a composite key\n(including the service name, model checkpoint, and version), has only one instance.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>service_data (Dict[str, Any]):</strong>  A dictionary containing the service configuration,\nwhich must include 'service_name', and may include 'model_checkpoint' and 'model_version'\nfor specific service setups.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Any: An instance of the requested service.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If the 'service_name' in service_data is unsupported or not recognized.</li>\n</ul>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">service_data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;service_name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ExampleService&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;model_checkpoint&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;model.ckpt&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;model_version&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;1.0&quot;</span>\n<span class=\"gp\">... </span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">service</span> <span class=\"o\">=</span> <span class=\"n\">Interface</span><span class=\"o\">.</span><span class=\"n\">get_service</span><span class=\"p\">(</span><span class=\"n\">service_data</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">service</span><span class=\"p\">)</span>\n<span class=\"go\">Instance of ExampleService configured with model checkpoint &#39;model.ckpt&#39; and version 1.0</span>\n</code></pre>\n  </div>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">service_data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "pipepal.video.tasks.example_task.interface.Interface.run": {"fullname": "pipepal.video.tasks.example_task.interface.Interface.run", "modulename": "pipepal.video.tasks.example_task.interface", "qualname": "Interface.run", "kind": "function", "doc": "<p>Processes input through a workflow of preprocessing, processing, and postprocessing.</p>\n\n<p>This method uses a service instance, which is fetched based on the service details provided\nin 'input', to run the given data through the service's workflow. This includes preprocessing\nthe data, processing it according to the service's logic, and then postprocessing results.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_obj (Dict[str, Any]):</strong>  A dictionary containing:\n<ul>\n<li>'service': A dictionary with the service configuration.</li>\n<li>'data': The data to be processed by the service.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Any: The output of the service after the workflow has been applied to the input.</p>\n</blockquote>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">input_data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;service&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n<span class=\"gp\">... </span>        <span class=\"s2\">&quot;service_name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ExampleService&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>        <span class=\"s2\">&quot;model_checkpoint&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;model.ckpt&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>        <span class=\"s2\">&quot;model_version&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;1.0&quot;</span>\n<span class=\"gp\">... </span>    <span class=\"p\">},</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;data&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;hello&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;world&quot;</span><span class=\"p\">}</span>\n<span class=\"gp\">... </span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">exampleTask</span> <span class=\"o\">=</span> <span class=\"n\">Interface</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">exampleTask</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">input_data</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">output</span><span class=\"p\">)</span>\n<span class=\"go\">The processed data.</span>\n</code></pre>\n  </div>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">input_obj</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "pipepal.video.tasks.example_task.services": {"fullname": "pipepal.video.tasks.example_task.services", "modulename": "pipepal.video.tasks.example_task.services", "kind": "module", "doc": "<p>This module provides the implementation of ExampleTask.</p>\n"}, "pipepal.video.tasks.example_task.services.example_service": {"fullname": "pipepal.video.tasks.example_task.services.example_service", "modulename": "pipepal.video.tasks.example_task.services.example_service", "kind": "module", "doc": "<p>This module provides the implementation of ExampleService for ExampleTask.</p>\n"}, "pipepal.video.tasks.example_task.services.example_service.service": {"fullname": "pipepal.video.tasks.example_task.services.example_service.service", "modulename": "pipepal.video.tasks.example_task.services.example_service.service", "kind": "module", "doc": "<p>This module implements an example service class which extends the AbstractService.</p>\n\n<p>The service is designed to demonstrate a typical implementation setup where\npreprocessing, processing, and postprocessing steps are defined to handle data\nin a manner specific to the service's requirements.</p>\n\n<h6 id=\"example\">Example:</h6>\n\n<blockquote>\n  <p>Demonstrate how to use the ExampleService:</p>\n  \n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">path.to.this.module</span> <span class=\"kn\">import</span> <span class=\"n\">Service</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">input_obj</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n<span class=\"go\">    &quot;data&quot;: {</span>\n<span class=\"go\">        &quot;hello&quot;: &quot;world&quot;</span>\n<span class=\"go\">    },</span>\n<span class=\"go\">    &quot;service&quot;: {</span>\n<span class=\"go\">        &quot;service_name&quot;: &quot;ExampleService&quot;, </span>\n<span class=\"go\">        &quot;model_checkpoint&quot;: &quot;model.ckpt&quot;,</span>\n<span class=\"go\">        &quot;model_version&quot;: &quot;1.0&quot;,</span>\n<span class=\"go\">    }</span>\n<span class=\"go\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">service</span> <span class=\"o\">=</span> <span class=\"n\">Service</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">preprocessing_output</span> <span class=\"o\">=</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"n\">preprocess</span><span class=\"p\">(</span><span class=\"n\">input_obj</span><span class=\"p\">[</span><span class=\"s2\">&quot;data&quot;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">processing_output</span> <span class=\"o\">=</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"n\">process</span><span class=\"p\">(</span><span class=\"n\">preprocessing_output</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">postprocessing_output</span> <span class=\"o\">=</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"n\">postprocess</span><span class=\"p\">(</span><span class=\"n\">processing_output</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">postprocessing_output</span><span class=\"p\">)</span>\n<span class=\"go\">{&#39;output&#39;: &#39;ExampleService output&#39;}</span>\n</code></pre>\n  </div>\n</blockquote>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>NAME (str):</strong>  A class attribute which gives the service a name, used internally.</li>\n</ul>\n"}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"fullname": "pipepal.video.tasks.example_task.services.example_service.service.Service", "modulename": "pipepal.video.tasks.example_task.services.example_service.service", "qualname": "Service", "kind": "class", "doc": "<p>Example service that extends AbstractService to demonstrate custom processing steps.</p>\n\n<p>This service class exemplifies a basic structure of a service in a system designed\nfor processing data through computational steps: preprocess, process, and postprocess.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>NAME (str):</strong>  The public name of the service, intended for identification in registries.</li>\n</ul>\n", "bases": "pipepal.video.tasks.example_task.abstract_service.AbstractService"}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"fullname": "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__", "modulename": "pipepal.video.tasks.example_task.services.example_service.service", "qualname": "Service.__init__", "kind": "function", "doc": "<p>Initialize the service class with the path to the base directory.</p>\n\n<p>The initialization involves setting up the base directory and potentially other\nconfigurations necessary for the service's operations.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>configs (Dict[str, Any]):</strong>  The configs dictionary for the service.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">configs</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span>)</span>"}, "pipepal.video.tasks.example_task.services.example_service.service.Service.NAME": {"fullname": "pipepal.video.tasks.example_task.services.example_service.service.Service.NAME", "modulename": "pipepal.video.tasks.example_task.services.example_service.service", "qualname": "Service.NAME", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;ExampleService&#x27;"}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"fullname": "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess", "modulename": "pipepal.video.tasks.example_task.services.example_service.service", "qualname": "Service.preprocess", "kind": "function", "doc": "<p>Preprocess the input data to fit the requirements of this service's processing step.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>data (Dict[str, Any]):</strong>  The input data to preprocess, expected to be in dictionary format.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, Any]: The preprocessed data, adjusted according to the service's needs. This\n       implementation simply passes the data through without modification.</p>\n</blockquote>\n\n<h6 id=\"example\">Example:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">service</span><span class=\"o\">.</span><span class=\"n\">preprocess</span><span class=\"p\">({</span><span class=\"s2\">&quot;hello&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;world&quot;</span><span class=\"p\">})</span>\n<span class=\"go\">{&#39;hello&#39;: &#39;world&#39;}</span>\n</code></pre>\n  </div>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"fullname": "pipepal.video.tasks.example_task.services.example_service.service.Service.process", "modulename": "pipepal.video.tasks.example_task.services.example_service.service", "qualname": "Service.process", "kind": "function", "doc": "<p>Process the input data to produce a service-specific output.</p>\n\n<p>This method is the core of the service where the main data manipulation happens. The current\nimplementation outputs a placeholder dictionary for demonstration purposes.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>data (Dict[str, Any]):</strong>  The preprocessed data ready for processing.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, Any]: A dictionary containing 'output' key with a string value representing\n                  the result of data processing.</p>\n</blockquote>\n\n<h6 id=\"example\">Example:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">service</span><span class=\"o\">.</span><span class=\"n\">process</span><span class=\"p\">({</span><span class=\"s2\">&quot;hello&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;preprocessed world&quot;</span><span class=\"p\">})</span>\n<span class=\"go\">{&#39;output&#39;: &#39;ExampleService output&#39;}</span>\n</code></pre>\n  </div>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"fullname": "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess", "modulename": "pipepal.video.tasks.example_task.services.example_service.service", "qualname": "Service.postprocess", "kind": "function", "doc": "<p>Postprocess the processed data to format the output as required by downstream services or storage solutions.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>data (Dict[str, Any]):</strong>  The data to postprocess after it has been processed. Typically involves\nfinal adjustments before sending the data to the next step or storing it.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, Any]: The postprocessed data, which in this case is the same as the input data.</p>\n</blockquote>\n\n<h6 id=\"example\">Example:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">service</span><span class=\"o\">.</span><span class=\"n\">postprocess</span><span class=\"p\">({</span><span class=\"s1\">&#39;output&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;ExampleService output&#39;</span><span class=\"p\">})</span>\n<span class=\"go\">{&#39;output&#39;: &#39;ExampleService output&#39;}</span>\n</code></pre>\n  </div>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.video.tasks.input_output": {"fullname": "pipepal.video.tasks.input_output", "modulename": "pipepal.video.tasks.input_output", "kind": "module", "doc": "<p>This module provides the implementation of IO for videos.</p>\n"}, "pipepal.video.tasks.input_output.abstract_service": {"fullname": "pipepal.video.tasks.input_output.abstract_service", "modulename": "pipepal.video.tasks.input_output.abstract_service", "kind": "module", "doc": "<p>This module defines an abstract service for the video IO task.</p>\n"}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"fullname": "pipepal.video.tasks.input_output.abstract_service.AbstractService", "modulename": "pipepal.video.tasks.input_output.abstract_service", "qualname": "AbstractService", "kind": "class", "doc": "<p>Abstract base class for video I/O services.</p>\n\n<p>This class serves as a template for defining services that handle\nthe input/output operations related to video files, specifically\nfocusing on extracting audio components from video data.</p>\n\n<p>Methods defined here outline the expected interface for such services,\nincluding the extraction of audio from video. Implementations should\nprovide specific logic to handle various video formats and ensure the\nintegrity and quality of the extracted audio.</p>\n", "bases": "abc.ABC"}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"fullname": "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos", "modulename": "pipepal.video.tasks.input_output.abstract_service", "qualname": "AbstractService.extract_audios_from_videos", "kind": "function", "doc": "<p>Extracts the audio track from the video data provided in the input object.</p>\n\n<p>This method should be implemented by subclasses to extract audio data from\na video file encapsulated within <code>input_obj</code>. The specifics of <code>input_obj</code>\n(such as format and contents) should be clearly defined in subclass implementations.</p>\n\n<p>Parameters:\ninput_obj (Dict[str, Any]): A dictionary containing the list of video files\n    and metadata necessary for the extraction process. The expected format\n    of this dictionary needs to be defined by the concrete subclass.</p>\n\n<p>Returns:\nDict[str, Any]: A dictionary containing the list of extracted audio data and\n    potentially additional metadata pertaining to the audio track.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">input_obj</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.video.tasks.input_output.interface": {"fullname": "pipepal.video.tasks.input_output.interface", "modulename": "pipepal.video.tasks.input_output.interface", "kind": "module", "doc": "<p>This module defines an API for the task.</p>\n"}, "pipepal.video.tasks.input_output.interface.Interface": {"fullname": "pipepal.video.tasks.input_output.interface.Interface", "modulename": "pipepal.video.tasks.input_output.interface", "qualname": "Interface", "kind": "class", "doc": "<p>A factory class for creating and managing service instances.</p>\n\n<p>It ensures a single instance per service type based on a unique key.</p>\n", "bases": "pipepal.utils.abstract_component.AbstractComponent"}, "pipepal.video.tasks.input_output.interface.Interface.__init__": {"fullname": "pipepal.video.tasks.input_output.interface.Interface.__init__", "modulename": "pipepal.video.tasks.input_output.interface", "qualname": "Interface.__init__", "kind": "function", "doc": "<p>Initialize the Interface class with the path to the base directory.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"fullname": "pipepal.video.tasks.input_output.interface.Interface.get_service", "modulename": "pipepal.video.tasks.input_output.interface", "qualname": "Interface.get_service", "kind": "function", "doc": "<p>Retrieves or creates a service instance based on the provided service data.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>service_data (Dict[str, Any]):</strong>  Data required to identify or create the service instance.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Any: An instance of the requested service.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If the service name is unsupported.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">service_data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"fullname": "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos", "modulename": "pipepal.video.tasks.input_output.interface", "qualname": "Interface.extract_audios_from_videos", "kind": "function", "doc": "<p>Extracts audios from videos using the specified service and input data.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_obj (Dict[str, Any]):</strong>  The input object containing the service and data.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, Any]: The output from the service after extracting audios from videos.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">input_obj</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.video.tasks.input_output.services": {"fullname": "pipepal.video.tasks.input_output.services", "modulename": "pipepal.video.tasks.input_output.services", "kind": "module", "doc": "<p>This module provides the implementation of IO for videos.</p>\n"}, "pipepal.video.tasks.input_output.services.ffmpeg": {"fullname": "pipepal.video.tasks.input_output.services.ffmpeg", "modulename": "pipepal.video.tasks.input_output.services.ffmpeg", "kind": "module", "doc": "<p>This module provides the implementation of ffmpeg for IO task.</p>\n"}, "pipepal.video.tasks.input_output.services.ffmpeg.service": {"fullname": "pipepal.video.tasks.input_output.services.ffmpeg.service", "modulename": "pipepal.video.tasks.input_output.services.ffmpeg.service", "kind": "module", "doc": "<p>This module implements an example service for the task.</p>\n"}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service": {"fullname": "pipepal.video.tasks.input_output.services.ffmpeg.service.Service", "modulename": "pipepal.video.tasks.input_output.services.ffmpeg.service", "qualname": "Service", "kind": "class", "doc": "<p>Example service that extends AbstractService.</p>\n", "bases": "pipepal.video.tasks.input_output.abstract_service.AbstractService"}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"fullname": "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__", "modulename": "pipepal.video.tasks.input_output.services.ffmpeg.service", "qualname": "Service.__init__", "kind": "function", "doc": "<p>Initialize the service with given configurations.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>configs:</strong>  A dictionary of configurations for the service.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">configs</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span>)</span>"}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.NAME": {"fullname": "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.NAME", "modulename": "pipepal.video.tasks.input_output.services.ffmpeg.service", "qualname": "Service.NAME", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;ffmpeg&#x27;"}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"fullname": "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos", "modulename": "pipepal.video.tasks.input_output.services.ffmpeg.service", "qualname": "Service.extract_audios_from_videos", "kind": "function", "doc": "<p>Extracts audio files from the video files provided in the input dictionary.</p>\n\n<p>This function processes a list of video files, extracting the audio from each file and saving it\nin a specified format and directory. Each audio file's name is derived from its corresponding \nvideo file, preserving the original hierarchy in the output directory.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_obj (Dict[str, Any]):</strong>  A dictionary containing the necessary inputs with the following keys:\n<ul>\n<li>'files' (List[str]): A list of paths to the video files.</li>\n<li>'output_folder' (str): The directory where the extracted audio files will be saved.</li>\n<li>'audio_format' (str): The file extension for the output audio files (e.g., '.mp3', '.wav').</li>\n<li>'audio_codec' (str): The codec to use for encoding the audio files (e.g., 'mp3', 'aac').</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, Any]: A dictionary containing one key:\n      - 'audio_files' (List[str]): A list of paths to the extracted audio files.</p>\n</blockquote>\n\n<h6 id=\"example\">Example:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">input_obj</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n<span class=\"go\">        &#39;files&#39;: [&#39;/path/to/video1.mp4&#39;, &#39;/path/to/video2.avi&#39;],</span>\n<span class=\"go\">        &#39;output_folder&#39;: &#39;/path/to/output&#39;,</span>\n<span class=\"go\">        &#39;audio_format&#39;: &#39;.wav&#39;,</span>\n<span class=\"go\">        &#39;audio_codec&#39;: &#39;pcm_s16le&#39;</span>\n<span class=\"go\">    }</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">extract_audios_from_videos</span><span class=\"p\">(</span><span class=\"n\">input_obj</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">output</span><span class=\"p\">[</span><span class=\"s1\">&#39;audio_files&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">[&#39;/path/to/output/video1.wav&#39;, &#39;/path/to/output/video2.wav&#39;]</span>\n</code></pre>\n  </div>\n</blockquote>\n\n<h6 id=\"note\">Note:</h6>\n\n<blockquote>\n  <p>The function assumes that all video files reside under a common root directory.</p>\n</blockquote>\n\n<h6 id=\"todo\">Todo:</h6>\n\n<blockquote>\n  <ul>\n  <li>Optimize the code for efficiency.</li>\n  </ul>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">input_obj</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"fullname": "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory", "modulename": "pipepal.video.tasks.input_output.services.ffmpeg.service", "qualname": "get_common_directory", "kind": "function", "doc": "<p>A function to get the common directory from a list of file paths.</p>\n\n<p>Parameters:</p>\n\n<ul>\n<li>files: a list of file paths</li>\n</ul>\n\n<p>Returns:</p>\n\n<ul>\n<li>the common directory among the file paths</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">files</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"fullname": "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video", "modulename": "pipepal.video.tasks.input_output.services.ffmpeg.service", "qualname": "extract_audio_from_video", "kind": "function", "doc": "<p>Extracts all audio channels from a video file and saves it in the specified format and codec.</p>\n\n<p>This function utilizes the ffmpeg library to extract audio without re-encoding if the specified\ncodec matches the source's codec. The output is in a format that can be specified (e.g., WAV, MP3),\nusing the desired codec (e.g., PCM_S16LE for WAV, libmp3lame for MP3).</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>video_path (str):</strong>  Path to the input video file. This should be the complete path to the video\nfile or a path that the script's context can resolve.</li>\n<li><strong>output_audio_path (str):</strong>  Path where the output audio file will be saved. This should include the\nfilename and the appropriate file extension based on the format.</li>\n<li><strong>format (str):</strong>  The format of the output audio file (default is 'wav'). Common formats include\n'wav', 'mp3', 'aac', etc.</li>\n<li><strong>acodec (str):</strong>  The audio codec to use for the output file (default is 'pcm_s16le'). Common codecs\ninclude 'pcm_s16le' (for WAV), 'libmp3lame' (for MP3), 'aac' (for AAC), etc.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None: This function does not return any values but will raise an error if the extraction fails.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If the video path does not exist, or the specified format/codec is not supported.</li>\n<li><strong>ffmpeg.Error:</strong>  An error occurred during the ffmpeg processing, such as an issue with the input file\nor codec compatibility.</li>\n</ul>\n\n<h6 id=\"examples\">Examples:</h6>\n\n<blockquote>\n  <h1 id=\"example-1-extract-audio-in-wav-format-with-default-codec-pcm_s16le\">Example 1: Extract audio in WAV format with default codec (PCM_S16LE)</h1>\n  \n  <p>extract_audio_from_video(\"example.mp4\", \"output_audio.wav\")</p>\n  \n  <h1 id=\"example-2-extract-audio-in-mp3-format-using-the-libmp3lame-codec\">Example 2: Extract audio in MP3 format using the libmp3lame codec</h1>\n  \n  <p>extract_audio_from_video(\"example.mp4\", \"output_audio.mp3\", format=\"mp3\", acodec=\"libmp3lame\")</p>\n  \n  <h1 id=\"example-3-extract-audio-in-aac-format-with-native-aac-codec\">Example 3: Extract audio in AAC format with native AAC codec</h1>\n  \n  <p>extract_audio_from_video(\"example.mp4\", \"output_audio.aac\", format=\"aac\", acodec=\"aac\")</p>\n</blockquote>\n\n<h6 id=\"todo\">Todo:</h6>\n\n<blockquote>\n  <ul>\n  <li>Dinamically check the supported formats and codecs</li>\n  </ul>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">video_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_audio_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"nb\">format</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;wav&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">acodec</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;pcm_s16le&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}}, "docInfo": {"pipepal": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 617}, "pipepal.app": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 33}, "pipepal.app.hello_world": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 6}, "pipepal.audio": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "pipepal.audio.tasks": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "pipepal.audio.tasks.example_task": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "pipepal.audio.tasks.example_task.abstract_service": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 24}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 37}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 40}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 37}, "pipepal.audio.tasks.example_task.interface": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "pipepal.audio.tasks.example_task.interface.Interface": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 349}, "pipepal.audio.tasks.example_task.interface.Interface.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 18}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 301}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 375}, "pipepal.audio.tasks.example_task.services": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "pipepal.audio.tasks.example_task.services.example_service": {"qualname": 0, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "pipepal.audio.tasks.example_task.services.example_service.service": {"qualname": 0, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 364}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"qualname": 1, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 8, "doc": 66}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"qualname": 3, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 57}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.NAME": {"qualname": 2, "fullname": 11, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"qualname": 2, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 139}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"qualname": 2, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 155}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"qualname": 2, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 151}, "pipepal.audio.tasks.input_output": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "pipepal.audio.tasks.input_output.abstract_service": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 50}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"qualname": 5, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 112}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"qualname": 6, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 84}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"qualname": 7, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 92}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"qualname": 5, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 79}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"qualname": 7, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 80}, "pipepal.audio.tasks.input_output.interface": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "pipepal.audio.tasks.input_output.interface.Interface": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 28}, "pipepal.audio.tasks.input_output.interface.Interface.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 14}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 77}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 50}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"qualname": 6, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 78}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"qualname": 7, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 79}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 78}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"qualname": 7, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 79}, "pipepal.audio.tasks.input_output.services": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "pipepal.audio.tasks.input_output.services.datasets": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "pipepal.audio.tasks.input_output.services.datasets.service": {"qualname": 0, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "pipepal.audio.tasks.input_output.services.datasets.service.Service": {"qualname": 1, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 8, "doc": 8}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"qualname": 3, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 29}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.NAME": {"qualname": 2, "fullname": 10, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"qualname": 5, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 344}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"qualname": 6, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 75}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"qualname": 7, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 87}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"qualname": 5, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 79}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"qualname": 7, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 80}, "pipepal.cli": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "pipepal.cli.main": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 8}, "pipepal.cli.hello_world": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 12}, "pipepal.utils": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "pipepal.utils.abstract_component": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 66}, "pipepal.utils.abstract_component.AbstractComponent": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 45}, "pipepal.utils.abstract_component.AbstractComponent.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 14}, "pipepal.utils.abstract_component.AbstractComponent.base_dir": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pipepal.utils.abstract_component.AbstractComponent.base_input_schema": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pipepal.utils.abstract_component.AbstractComponent.base_output_schema": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pipepal.utils.abstract_component.AbstractComponent.schema_validator": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 11}, "pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 12}, "pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 16}, "pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 16}, "pipepal.utils.functions": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "pipepal.video": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "pipepal.video.tasks": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "pipepal.video.tasks.example_task": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "pipepal.video.tasks.example_task.abstract_service": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 24}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 37}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 40}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 37}, "pipepal.video.tasks.example_task.interface": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "pipepal.video.tasks.example_task.interface.Interface": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 349}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 18}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 301}, "pipepal.video.tasks.example_task.interface.Interface.run": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 375}, "pipepal.video.tasks.example_task.services": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "pipepal.video.tasks.example_task.services.example_service": {"qualname": 0, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "pipepal.video.tasks.example_task.services.example_service.service": {"qualname": 0, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 364}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"qualname": 1, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 8, "doc": 66}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"qualname": 3, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 57}, "pipepal.video.tasks.example_task.services.example_service.service.Service.NAME": {"qualname": 2, "fullname": 11, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"qualname": 2, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 139}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"qualname": 2, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 155}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"qualname": 2, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 151}, "pipepal.video.tasks.input_output": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "pipepal.video.tasks.input_output.abstract_service": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 80}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"qualname": 5, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 121}, "pipepal.video.tasks.input_output.interface": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "pipepal.video.tasks.input_output.interface.Interface": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 28}, "pipepal.video.tasks.input_output.interface.Interface.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 14}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 77}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 61}, "pipepal.video.tasks.input_output.services": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "pipepal.video.tasks.input_output.services.ffmpeg": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "pipepal.video.tasks.input_output.services.ffmpeg.service": {"qualname": 0, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service": {"qualname": 1, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 8, "doc": 8}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"qualname": 3, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 29}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.NAME": {"qualname": 2, "fullname": 10, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"qualname": 5, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 391}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"qualname": 3, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 47}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"qualname": 4, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 79, "bases": 0, "doc": 397}}, "length": 108, "save": true}, "index": {"qualname": {"root": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1}}, "df": 9, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {"pipepal.app.hello_world": {"tf": 1}, "pipepal.cli.hello_world": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}}, "df": 12}, "u": {"docs": {}, "df": 0, "b": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}}, "df": 6}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.app.hello_world": {"tf": 1}, "pipepal.cli.hello_world": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}}, "df": 16}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.base_dir": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.base_input_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.base_output_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.schema_validator": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1, "s": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 6}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}}, "df": 4}}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}}, "df": 4}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}}, "df": 4}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}}, "df": 20}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1}}, "df": 9}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.base_input_schema": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1}}, "df": 7}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.NAME": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.NAME": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 28}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.base_input_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.base_output_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.schema_validator": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1}}, "df": 4}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1}}, "df": 10}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.NAME": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.NAME": {"tf": 1}}, "df": 4}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 10}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}}, "df": 6}}, "r": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.base_dir": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}}, "df": 12}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}}, "df": 3}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}}, "df": 3}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.cli.main": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.base_dir": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.base_input_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.base_output_schema": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.base_output_schema": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.schema_validator": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1, "s": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 3}}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 4}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1}}, "df": 1}}}}}}}}, "fullname": {"root": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1}}, "df": 9, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pipepal": {"tf": 1}, "pipepal.app": {"tf": 1}, "pipepal.app.hello_world": {"tf": 1}, "pipepal.audio": {"tf": 1}, "pipepal.audio.tasks": {"tf": 1}, "pipepal.audio.tasks.example_task": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.audio.tasks.input_output": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.NAME": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.cli": {"tf": 1}, "pipepal.cli.main": {"tf": 1}, "pipepal.cli.hello_world": {"tf": 1}, "pipepal.utils": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.base_dir": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.base_input_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.base_output_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.schema_validator": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1}, "pipepal.utils.functions": {"tf": 1}, "pipepal.video": {"tf": 1}, "pipepal.video.tasks": {"tf": 1}, "pipepal.video.tasks.example_task": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.input_output": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.NAME": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 108}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}}, "df": 4}}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}}, "df": 4}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}}, "df": 4}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {"pipepal.app": {"tf": 1}, "pipepal.app.hello_world": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"pipepal.audio": {"tf": 1}, "pipepal.audio.tasks": {"tf": 1}, "pipepal.audio.tasks.example_task": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.audio.tasks.input_output": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.NAME": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 51, "s": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 6}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.base_dir": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.base_input_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.base_output_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.schema_validator": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}}, "df": 30, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}}, "df": 16}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.base_dir": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.base_input_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.base_output_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.schema_validator": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {"pipepal.app.hello_world": {"tf": 1}, "pipepal.cli.hello_world": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}}, "df": 12}, "u": {"docs": {}, "df": 0, "b": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}}, "df": 6}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.app.hello_world": {"tf": 1}, "pipepal.cli.hello_world": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"pipepal.audio.tasks.example_task": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}}, "df": 40, "s": {"docs": {"pipepal.audio.tasks": {"tf": 1}, "pipepal.audio.tasks.example_task": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.audio.tasks.input_output": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.NAME": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.video.tasks": {"tf": 1}, "pipepal.video.tasks.example_task": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.input_output": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.NAME": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 88}}}}, "o": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.4142135623730951}}, "df": 40}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 4}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.NAME": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.NAME": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 56, "s": {"docs": {"pipepal.audio.tasks.example_task.services": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.audio.tasks.input_output.services": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.NAME": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.video.tasks.example_task.services": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.input_output.services": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.NAME": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 38}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.base_input_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.base_output_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.schema_validator": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1}}, "df": 4}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.interface.Interface.__init__": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.__init__": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.interface.Interface.__init__": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1.4142135623730951}}, "df": 24}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1}}, "df": 9}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.input_output": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.NAME": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.base_input_schema": {"tf": 1}, "pipepal.video.tasks.input_output": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.NAME": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 47}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1}}, "df": 7}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1}}, "df": 10}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.NAME": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.NAME": {"tf": 1}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.input_output": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.NAME": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.base_output_schema": {"tf": 1}, "pipepal.video.tasks.input_output": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.NAME": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 47}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 10}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.utils.functions": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.NAME": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 8}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}}, "df": 6}}, "r": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.base_dir": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}}, "df": 12, "s": {"docs": {"pipepal.audio.tasks.input_output.services.datasets": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.NAME": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}}, "df": 10}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.utils": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.base_dir": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.base_input_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.base_output_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.schema_validator": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1}, "pipepal.utils.functions": {"tf": 1}}, "df": 12}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"pipepal.cli": {"tf": 1}, "pipepal.cli.main": {"tf": 1}, "pipepal.cli.hello_world": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.base_dir": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.base_input_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.base_output_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.schema_validator": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1}}, "df": 10}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.cli.main": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.base_dir": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.base_input_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.base_output_schema": {"tf": 1}}, "df": 3}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.schema_validator": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {"pipepal.video": {"tf": 1}, "pipepal.video.tasks": {"tf": 1}, "pipepal.video.tasks.example_task": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.input_output": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.NAME": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.4142135623730951}}, "df": 40, "s": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 3}}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1}}, "df": 1}}}}}}, "annotation": {"root": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.NAME": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.NAME": {"tf": 1}}, "df": 4, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.NAME": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.NAME": {"tf": 1}}, "df": 4}}}}}, "default_value": {"root": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.NAME": {"tf": 1.4142135623730951}, "pipepal.cli.main": {"tf": 1.4142135623730951}, "pipepal.cli.hello_world": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.NAME": {"tf": 1.4142135623730951}}, "df": 6, "x": {"2": {"7": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.NAME": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.NAME": {"tf": 1.4142135623730951}}, "df": 4}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.NAME": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.cli.main": {"tf": 1}, "pipepal.cli.hello_world": {"tf": 1}}, "df": 2}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"pipepal.cli.main": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"pipepal.cli.main": {"tf": 1}, "pipepal.cli.hello_world": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.cli.main": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.cli.hello_world": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {"pipepal.cli.hello_world": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.cli.hello_world": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.NAME": {"tf": 1}}, "df": 1}}}}}}}}, "signature": {"root": {"3": {"9": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 2}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 2}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"pipepal.app.hello_world": {"tf": 3}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 4.47213595499958}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 5.477225575051661}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 5.477225575051661}, "pipepal.audio.tasks.example_task.interface.Interface.__init__": {"tf": 2}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 5.477225575051661}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 5.477225575051661}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 4.69041575982343}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 6.324555320336759}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 6.324555320336759}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 6.324555320336759}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 6.324555320336759}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 6.324555320336759}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 6.324555320336759}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 6.324555320336759}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 6.324555320336759}, "pipepal.audio.tasks.input_output.interface.Interface.__init__": {"tf": 2}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 5.477225575051661}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 6.324555320336759}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 6.324555320336759}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 6.324555320336759}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 6.324555320336759}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 6.324555320336759}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 4.69041575982343}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 6.324555320336759}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 6.324555320336759}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 6.324555320336759}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 6.324555320336759}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 6.324555320336759}, "pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 6.855654600401044}, "pipepal.utils.abstract_component.AbstractComponent.schema_validator": {"tf": 4}, "pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 5.385164807134504}, "pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 5.477225575051661}, "pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 4}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 4.47213595499958}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 5.477225575051661}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 5.477225575051661}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"tf": 2}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 5.477225575051661}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 5.477225575051661}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 4.69041575982343}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 6.324555320336759}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 6.324555320336759}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 6.324555320336759}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 6.324555320336759}, "pipepal.video.tasks.input_output.interface.Interface.__init__": {"tf": 2}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 5.477225575051661}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 6.324555320336759}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 4.69041575982343}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 6.324555320336759}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 4.58257569495584}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 7.745966692414834}}, "df": 52, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.app.hello_world": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "s": {"1": {"6": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 32}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}}, "df": 4}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1.7320508075688772}, "pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1.4142135623730951}, "pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 2}}, "df": 43}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}}, "df": 19}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.4142135623730951}}, "df": 40}}, "r": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.4142135623730951}}, "df": 42}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1}}, "df": 4}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.schema_validator": {"tf": 1.4142135623730951}, "pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 19}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 13}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1.4142135623730951}, "pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1}}, "df": 2, "s": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.schema_validator": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.4142135623730951}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "m": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1.4142135623730951}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}}}, "bases": {"root": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1.4142135623730951}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1.4142135623730951}}, "df": 5}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service": {"tf": 1}}, "df": 8, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}}, "df": 4}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service": {"tf": 1}}, "df": 8}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}}, "df": 4}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}}, "df": 4}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}}, "df": 2, "s": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service": {"tf": 1}}, "df": 4}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {"pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service": {"tf": 1}}, "df": 2}}}}}}}, "doc": {"root": {"0": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}}, "df": 8}, "1": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 9}, "2": {"5": {"6": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}, "3": {"9": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 2}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 2}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 2}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 2.8284271247461903}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 2}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 2}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 2}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 2}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 2.8284271247461903}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 4.898979485566356}}, "df": 12}, "docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}, "docs": {"pipepal": {"tf": 16.278820596099706}, "pipepal.app": {"tf": 2.449489742783178}, "pipepal.app.hello_world": {"tf": 1.7320508075688772}, "pipepal.audio": {"tf": 1.7320508075688772}, "pipepal.audio.tasks": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.abstract_service": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"tf": 2.449489742783178}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 4.795831523312719}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 4.795831523312719}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 4.795831523312719}, "pipepal.audio.tasks.example_task.interface": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 14.071247279470288}, "pipepal.audio.tasks.example_task.interface.Interface.__init__": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 12.529964086141668}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 14.798648586948742}, "pipepal.audio.tasks.example_task.services": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.services.example_service": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 14.2828568570857}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 4.242640687119285}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 4.242640687119285}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 8.366600265340756}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 8.54400374531753}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 8.366600265340756}, "pipepal.audio.tasks.input_output": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.abstract_service": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 2.449489742783178}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 6.324555320336759}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 6.4031242374328485}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 6.4031242374328485}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 5.916079783099616}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 5.916079783099616}, "pipepal.audio.tasks.input_output.interface": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 2.449489742783178}, "pipepal.audio.tasks.input_output.interface.Interface.__init__": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 5.916079783099616}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 4.898979485566356}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 6.082762530298219}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 6.082762530298219}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 6.082762530298219}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 6.082762530298219}, "pipepal.audio.tasks.input_output.services": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.services.datasets": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.services.datasets.service": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.services.datasets.service.Service": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 3.7416573867739413}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.NAME": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 11.874342087037917}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 4.795831523312719}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 5}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 5.916079783099616}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 5.916079783099616}, "pipepal.cli": {"tf": 1.7320508075688772}, "pipepal.cli.main": {"tf": 1.7320508075688772}, "pipepal.cli.hello_world": {"tf": 1.7320508075688772}, "pipepal.utils": {"tf": 1.7320508075688772}, "pipepal.utils.abstract_component": {"tf": 2.449489742783178}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 2.449489742783178}, "pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1.7320508075688772}, "pipepal.utils.abstract_component.AbstractComponent.base_dir": {"tf": 1.7320508075688772}, "pipepal.utils.abstract_component.AbstractComponent.base_input_schema": {"tf": 1.7320508075688772}, "pipepal.utils.abstract_component.AbstractComponent.base_output_schema": {"tf": 1.7320508075688772}, "pipepal.utils.abstract_component.AbstractComponent.schema_validator": {"tf": 1.7320508075688772}, "pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1.7320508075688772}, "pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1.7320508075688772}, "pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1.7320508075688772}, "pipepal.utils.functions": {"tf": 1.7320508075688772}, "pipepal.video": {"tf": 1.7320508075688772}, "pipepal.video.tasks": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.abstract_service": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"tf": 2.449489742783178}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 4.795831523312719}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 4.795831523312719}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 4.795831523312719}, "pipepal.video.tasks.example_task.interface": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 14.071247279470288}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 12.529964086141668}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 14.798648586948742}, "pipepal.video.tasks.example_task.services": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.services.example_service": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 14.2828568570857}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 4.242640687119285}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 4.242640687119285}, "pipepal.video.tasks.example_task.services.example_service.service.Service.NAME": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 8.366600265340756}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 8.54400374531753}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 8.366600265340756}, "pipepal.video.tasks.input_output": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.abstract_service": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 3}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 4.123105625617661}, "pipepal.video.tasks.input_output.interface": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 2.449489742783178}, "pipepal.video.tasks.input_output.interface.Interface.__init__": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 5.916079783099616}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 4.898979485566356}, "pipepal.video.tasks.input_output.services": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.services.ffmpeg": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.services.ffmpeg.service": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 3.7416573867739413}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.NAME": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 12.727922061357855}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 4.358898943540674}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 9.746794344808963}}, "df": 108, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 3.1622776601683795}, "pipepal.app": {"tf": 1.7320508075688772}, "pipepal.audio": {"tf": 1}, "pipepal.audio.tasks": {"tf": 1}, "pipepal.audio.tasks.example_task": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 3}, "pipepal.audio.tasks.example_task.interface.Interface.__init__": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 2.23606797749979}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 3.605551275463989}, "pipepal.audio.tasks.example_task.services": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 2.23606797749979}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 2.8284271247461903}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 2.449489742783178}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 2.6457513110645907}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 2.8284271247461903}, "pipepal.audio.tasks.input_output": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 2.23606797749979}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 2.23606797749979}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 2}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 2.23606797749979}, "pipepal.audio.tasks.input_output.interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.__init__": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 2}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 3.3166247903554}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 2}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 2.23606797749979}, "pipepal.cli": {"tf": 1}, "pipepal.cli.main": {"tf": 1}, "pipepal.cli.hello_world": {"tf": 1.4142135623730951}, "pipepal.utils": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1}, "pipepal.video": {"tf": 1}, "pipepal.video.tasks": {"tf": 1}, "pipepal.video.tasks.example_task": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 3}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 2.23606797749979}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 3.605551275463989}, "pipepal.video.tasks.example_task.services": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 2.23606797749979}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 2.8284271247461903}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 2.449489742783178}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 2.6457513110645907}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 2.8284271247461903}, "pipepal.video.tasks.input_output": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 2.23606797749979}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 3.1622776601683795}, "pipepal.video.tasks.input_output.interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.__init__": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 2}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 2.23606797749979}, "pipepal.video.tasks.input_output.services": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 4.123105625617661}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 5}}, "df": 88, "n": {"docs": {"pipepal.app": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}}, "df": 4}, "y": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"pipepal": {"tf": 1.7320508075688772}, "pipepal.app": {"tf": 1.4142135623730951}, "pipepal.audio": {"tf": 1}, "pipepal.audio.tasks": {"tf": 1}, "pipepal.audio.tasks.example_task": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.example_task.interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.audio.tasks.input_output": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.input_output.interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.cli": {"tf": 1}, "pipepal.utils": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}, "pipepal.utils.functions": {"tf": 1}, "pipepal.video": {"tf": 1}, "pipepal.video.tasks": {"tf": 1}, "pipepal.video.tasks.example_task": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.example_task.interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.input_output": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.interface": {"tf": 1}, "pipepal.video.tasks.input_output.services": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 2}}, "df": 63}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"pipepal": {"tf": 1.4142135623730951}, "pipepal.app": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.4142135623730951}}, "df": 14}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}}, "df": 10}}}}}}, "o": {"docs": {"pipepal": {"tf": 3.3166247903554}, "pipepal.app": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 2}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 2.23606797749979}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 2}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 2}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 1.7320508075688772}, "pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.schema_validator": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 2}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 2.23606797749979}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 2}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 2}}, "df": 57, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pipepal": {"tf": 1.4142135623730951}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {"pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 8}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"pipepal": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service": {"tf": 1}}, "df": 15, "s": {"docs": {"pipepal": {"tf": 1.7320508075688772}, "pipepal.audio.tasks": {"tf": 1}, "pipepal.video.tasks": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pipepal": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1}}, "df": 3, "s": {"docs": {"pipepal": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}}, "df": 2}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}}, "df": 7, "s": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}}, "df": 2}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"pipepal": {"tf": 1.4142135623730951}}, "df": 1}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}}, "df": 4}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"pipepal": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pipepal": {"tf": 2.6457513110645907}, "pipepal.audio": {"tf": 1}, "pipepal.audio.tasks": {"tf": 1}, "pipepal.cli": {"tf": 1}, "pipepal.utils": {"tf": 1}, "pipepal.video": {"tf": 1}, "pipepal.video.tasks": {"tf": 1}}, "df": 7}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pipepal": {"tf": 2}}, "df": 1}}}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 2.449489742783178}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pipepal": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "h": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 2.6457513110645907}}, "df": 14, "s": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1.7320508075688772}}, "df": 4}, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"1": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}}, "df": 1}, "2": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"1": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 1}, "2": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"1": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 1}, "2": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}}, "df": 2, "s": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1}}, "df": 7}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}}, "df": 16, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 14}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 7}, "d": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.4142135623730951}}, "df": 8}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}}, "df": 3, "s": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio": {"tf": 1}, "pipepal.audio.tasks": {"tf": 1}, "pipepal.audio.tasks.example_task": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.example_task.services": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.audio.tasks.input_output": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.input_output.services": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets": {"tf": 1}, "pipepal.utils": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}, "pipepal.video": {"tf": 1}, "pipepal.video.tasks": {"tf": 1}, "pipepal.video.tasks.example_task": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.example_task.services": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.video.tasks.input_output": {"tf": 1}, "pipepal.video.tasks.input_output.services": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg": {"tf": 1}}, "df": 22}, "d": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 10}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pipepal.app": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {"pipepal": {"tf": 1.4142135623730951}}, "df": 1, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.7320508075688772}}, "df": 10, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.4142135623730951}}, "df": 6}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1.7320508075688772}}, "df": 6}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.utils.abstract_component": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}}, "df": 9, "s": {"docs": {"pipepal.app": {"tf": 1}, "pipepal.app.hello_world": {"tf": 1}}, "df": 2}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}}, "df": 2}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}}, "df": 4, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.7320508075688772}}, "df": 10, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}}, "df": 9}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1.7320508075688772}}, "df": 6}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}}, "df": 3}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.utils.abstract_component": {"tf": 1}}, "df": 1, "s": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "m": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 2}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "o": {"docs": {"pipepal": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}}, "df": 6}}}}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}}, "df": 3, "s": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pipepal": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}, "l": {"docs": {"pipepal": {"tf": 1}}, "df": 1}, "d": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}}, "df": 1, "y": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1}}, "df": 5}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1, "s": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 39}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}}, "df": 4}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.example_task.interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}}, "df": 5}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}}, "df": 4}}}}}, "d": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}}, "df": 4}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}}, "df": 2}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {"pipepal": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1, "s": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 7}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.app": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}}, "df": 5}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pipepal": {"tf": 2.449489742783178}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.7320508075688772}}, "df": 32, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.4142135623730951}}, "df": 3}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}}, "df": 15}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 10}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1.7320508075688772}}, "df": 5, "s": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"pipepal": {"tf": 1.7320508075688772}, "pipepal.app": {"tf": 1}, "pipepal.app.hello_world": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.cli.hello_world": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}}, "df": 14}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}, "v": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 2}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 2.6457513110645907}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"pipepal": {"tf": 1.4142135623730951}, "pipepal.app": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 2.23606797749979}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.functions": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 2}}, "df": 30, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 2.23606797749979}}, "df": 18, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.__init__": {"tf": 1}}, "df": 11}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}}, "df": 6}}}, "e": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.7320508075688772}}, "df": 3, "s": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}}, "df": 4}, "d": {"docs": {"pipepal.utils.abstract_component": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pipepal": {"tf": 1.7320508075688772}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 2}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 2}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1.7320508075688772}}, "df": 10, "s": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 2}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 2}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}}, "df": 4}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pipepal": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 2.449489742783178}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.schema_validator": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 2.449489742783178}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 2}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 2}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.4142135623730951}}, "df": 39, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {"pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 3}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1}}, "df": 8, "s": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}}, "df": 4}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1}}, "df": 6}}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.audio": {"tf": 1}, "pipepal.audio.tasks": {"tf": 1}, "pipepal.audio.tasks.example_task": {"tf": 1}, "pipepal.audio.tasks.example_task.services": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.audio.tasks.input_output": {"tf": 1}, "pipepal.audio.tasks.input_output.services": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets": {"tf": 1}, "pipepal.utils": {"tf": 1}, "pipepal.video": {"tf": 1}, "pipepal.video.tasks": {"tf": 1}, "pipepal.video.tasks.example_task": {"tf": 1}, "pipepal.video.tasks.example_task.services": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.input_output": {"tf": 1}, "pipepal.video.tasks.input_output.services": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg": {"tf": 1}}, "df": 23, "s": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.utils.abstract_component": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {"pipepal.app": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 12, "s": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 2}}, "f": {"docs": {"pipepal.app": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 2}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.7320508075688772}}, "df": 8}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}}, "df": 2}, "d": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}}, "df": 2}}}}}}}, "y": {"docs": {"pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {"pipepal.audio.tasks.input_output": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.input_output.services": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets": {"tf": 1}, "pipepal.video.tasks.input_output": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.video.tasks.input_output.services": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg": {"tf": 1}}, "df": 9}, "/": {"docs": {}, "df": 0, "o": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}}, "df": 1}}}, "a": {"docs": {"pipepal": {"tf": 1.4142135623730951}, "pipepal.app": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 2.23606797749979}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 2}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 2}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 2}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 2.449489742783178}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 2.23606797749979}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 2.23606797749979}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 2.23606797749979}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 2}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 2.8284271247461903}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 2.449489742783178}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 2.449489742783178}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 2.23606797749979}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 2}, "pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1.4142135623730951}, "pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1.4142135623730951}, "pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 2.23606797749979}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 2}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 2}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 2}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 2.6457513110645907}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.7320508075688772}}, "df": 45, "n": {"docs": {"pipepal.audio.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.7320508075688772}}, "df": 21, "d": {"docs": {"pipepal": {"tf": 4}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 2}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 1.7320508075688772}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1.4142135623730951}, "pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.schema_validator": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 2}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 2}}, "df": 36}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"pipepal": {"tf": 2.23606797749979}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 35}}, "s": {"docs": {"pipepal": {"tf": 1}, "pipepal.app": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 11, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 5, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}}, "df": 5}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {"pipepal": {"tf": 1}, "pipepal.cli.hello_world": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.cli": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pipepal.utils.abstract_component": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {"pipepal.audio.tasks.example_task.interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface": {"tf": 1}}, "df": 4}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio": {"tf": 1}, "pipepal.audio.tasks": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 2}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 2.8284271247461903}, "pipepal.video.tasks": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 2}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 3.605551275463989}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 3.872983346207417}}, "df": 16, "s": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 3}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}}, "df": 10, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 35}}}}}}}, "e": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}}, "df": 7}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}}, "df": 2, "s": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}}, "df": 6}}}}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}}, "df": 7}}}}, "d": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}}, "df": 2}}}}}}}}}, "d": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1.7320508075688772}}, "df": 2, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}}, "df": 1}}}}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.schema_validator": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 2.8284271247461903}}, "df": 2}}, "v": {"docs": {}, "df": 0, "i": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pipepal": {"tf": 2.449489742783178}, "pipepal.audio.tasks": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.input_output.services": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.cli": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 2}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1.7320508075688772}, "pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}, "pipepal.utils.functions": {"tf": 1}, "pipepal.video.tasks": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.services": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 2.449489742783178}}, "df": 48, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 3.1622776601683795}}, "df": 9, "s": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.4142135623730951}}, "df": 2}, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"pipepal": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pipepal": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}}, "df": 3}, "l": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 2}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 2}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 2.8284271247461903}}, "df": 11, "s": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 2.6457513110645907}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 3}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 3.605551275463989}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1}}, "df": 6}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"pipepal": {"tf": 2}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.cli.hello_world": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 2}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 2}}, "df": 26}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.app": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"pipepal": {"tf": 1}, "pipepal.utils.functions": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1.7320508075688772}}, "df": 10}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.7320508075688772}}, "df": 2}}}}}}, "s": {"1": {"6": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 2}}, "df": 2}}}, "docs": {}, "df": 0}, "docs": {"pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.4142135623730951}, "pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.4142135623730951}}, "df": 11, "t": {"docs": {}, "df": 0, "r": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 2}}, "df": 10, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}}, "df": 2, "d": {"docs": {"pipepal.utils.abstract_component": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}}, "df": 7, "s": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}}, "df": 4, "s": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1.4142135623730951}}, "df": 5}}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 5}}, "b": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pipepal": {"tf": 2.449489742783178}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pipepal": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}}, "df": 12, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 2}}, "df": 7}}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}}, "df": 3, "s": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"pipepal": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 2.449489742783178}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 4.123105625617661}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 3.1622776601683795}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 3.4641016151377544}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 2}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 2.449489742783178}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 2.449489742783178}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 4.123105625617661}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 3.1622776601683795}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 3.4641016151377544}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 2}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 2.449489742783178}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.services.ffmpeg.service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1.4142135623730951}}, "df": 39, "s": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1.7320508075688772}}, "df": 10}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.app": {"tf": 1}}, "df": 1}, "y": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.app": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"pipepal.utils.abstract_component": {"tf": 1.4142135623730951}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1}}, "df": 3, "s": {"docs": {"pipepal.utils.abstract_component": {"tf": 1.4142135623730951}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1.4142135623730951}, "pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.schema_validator": {"tf": 1}}, "df": 4}}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}}, "df": 2}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 4}, "d": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.4142135623730951}}, "df": 4}}}}, "a": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {"pipepal": {"tf": 2.23606797749979}, "pipepal.audio": {"tf": 1}, "pipepal.audio.tasks": {"tf": 1}, "pipepal.audio.tasks.example_task": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 2}, "pipepal.utils": {"tf": 1}, "pipepal.video": {"tf": 1}, "pipepal.video.tasks": {"tf": 1}, "pipepal.video.tasks.example_task": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 2}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.services": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 45}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"pipepal": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.7320508075688772}}, "df": 8, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}}, "df": 5, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pipepal": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 2.8284271247461903}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 2}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 2.23606797749979}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 2.6457513110645907}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.schema_validator": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 2.8284271247461903}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 2}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 2.23606797749979}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 2.449489742783178}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 2.8284271247461903}}, "df": 34, "s": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}}, "df": 5}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pipepal": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pipepal": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}}, "df": 4}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 1, "d": {"docs": {"pipepal": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 18, "l": {"docs": {}, "df": 0, "y": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}}, "df": 2}}, "e": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 3}}, "b": {"docs": {}, "df": 0, "j": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.7320508075688772}}, "df": 15, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}}, "df": 11}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"2": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}, "docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 2}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.7320508075688772}}, "df": 14, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pipepal": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}}, "df": 4}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.__init__": {"tf": 1}}, "df": 10, "d": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 13}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}}, "df": 2}}}}, "y": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1.4142135623730951}}, "df": 9}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pipepal": {"tf": 2.8284271247461903}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 2}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 2}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 2.23606797749979}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 2.8284271247461903}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 2.23606797749979}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 2.23606797749979}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 2.449489742783178}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.7320508075688772}, "pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1.4142135623730951}, "pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.preprocess": {"tf": 2}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.postprocess": {"tf": 2}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 2.23606797749979}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 2.8284271247461903}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 2.23606797749979}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 2.23606797749979}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 2.449489742783178}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1.4142135623730951}}, "df": 38, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 2}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 2}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 3.1622776601683795}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1.7320508075688772}}, "df": 14, "s": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pipepal": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"pipepal": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}}, "df": 5}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}, "s": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1}}, "df": 1, "d": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.utils.abstract_component": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.cli.main": {"tf": 1}}, "df": 1, "s": {"docs": {"pipepal.app": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface": {"tf": 1}, "pipepal.cli": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface": {"tf": 1}}, "df": 11}, "d": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1.4142135623730951}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}}, "df": 2}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.schema_validator": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {"pipepal": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}}, "df": 3, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}}, "df": 7}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 2.23606797749979}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.abstract_service.AbstractService.process": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.7320508075688772}}, "df": 28}}}}}}, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.4142135623730951}}, "df": 34}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 2}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1.4142135623730951}}, "df": 13}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 7}}}}}, "s": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.utils.abstract_component": {"tf": 1.7320508075688772}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.utils.abstract_component.AbstractComponent": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.schema_validator": {"tf": 1}}, "df": 1, "d": {"docs": {"pipepal.utils.abstract_component": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 2}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 2}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}}, "df": 9}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {"pipepal": {"tf": 1.4142135623730951}}, "df": 1}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {"pipepal": {"tf": 1}, "pipepal.video": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 2.23606797749979}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 2.23606797749979}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 2.8284271247461903}}, "df": 7, "s": {"docs": {"pipepal.audio.tasks.input_output": {"tf": 1}, "pipepal.audio.tasks.input_output.services": {"tf": 1}, "pipepal.video.tasks.input_output": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 6}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}}, "df": 15, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}}, "df": 6}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.get_response_time": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.utils.abstract_component": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}}, "df": 7}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}}, "df": 3}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.audio.tasks.example_task.interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}}, "df": 2}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.app": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.cli.main": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}}, "df": 6}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}, "e": {"docs": {"pipepal.audio": {"tf": 1}, "pipepal.audio.tasks": {"tf": 1}, "pipepal.audio.tasks.example_task": {"tf": 1}, "pipepal.audio.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface": {"tf": 1}, "pipepal.audio.tasks.example_task.services": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface": {"tf": 1}, "pipepal.audio.tasks.input_output.services": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service": {"tf": 1}, "pipepal.cli": {"tf": 1}, "pipepal.cli.hello_world": {"tf": 1}, "pipepal.utils": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.functions": {"tf": 1}, "pipepal.video": {"tf": 1}, "pipepal.video.tasks": {"tf": 1}, "pipepal.video.tasks.example_task": {"tf": 1}, "pipepal.video.tasks.example_task.abstract_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface": {"tf": 1}, "pipepal.video.tasks.example_task.services": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface": {"tf": 1}, "pipepal.video.tasks.input_output.services": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service": {"tf": 1}}, "df": 33, "s": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}}, "df": 2, "s": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 2.8284271247461903}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 2.8284271247461903}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1.7320508075688772}}, "df": 8}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1.4142135623730951}}, "df": 1}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}, "p": {"3": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 2.6457513110645907}}, "df": 2}, "4": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.7320508075688772}}, "df": 2}, "docs": {}, "df": 0}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"pipepal": {"tf": 2}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.4142135623730951}}, "df": 2}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pipepal": {"tf": 1}, "pipepal.app": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 2}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 2}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}}, "df": 8}}}}}, "s": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}}, "df": 5, "s": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}, "s": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.app": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.4142135623730951}}, "df": 21}}}, "s": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}}, "df": 1}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.4142135623730951}}, "df": 4}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.cli.hello_world": {"tf": 1}}, "df": 1, "s": {"docs": {"pipepal.cli": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}}, "df": 3}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"pipepal": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}}, "df": 3}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}}, "df": 2}}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 2, "c": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 3}}, "df": 2, "s": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.4142135623730951}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {"pipepal": {"tf": 1}, "pipepal.cli": {"tf": 1}, "pipepal.cli.main": {"tf": 1}}, "df": 3}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.abstract_service.AbstractService": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.__init__": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.abstract_service.AbstractService": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.__init__": {"tf": 1}}, "df": 24, "e": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.utils.abstract_component": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}}, "df": 4}}}, "e": {"docs": {"pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}}, "df": 2, "s": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}}, "df": 6}, "d": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}}, "df": 8}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}}, "df": 4}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1}}, "df": 1, "s": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.utils": {"tf": 1}, "pipepal.utils.abstract_component": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"pipepal.utils.functions": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 5, "d": {"docs": {"pipepal": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}}, "df": 3}, "s": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.4142135623730951}}, "df": 4}}}}, "p": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}}, "df": 4}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}}, "df": 2, "s": {"docs": {"pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.__init__": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 4}}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.7320508075688772}}, "df": 9, "e": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 2}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 2}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 13, "s": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.4142135623730951}}, "df": 2, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pipepal": {"tf": 1.4142135623730951}}, "df": 1}}}, "y": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.4142135623730951}}, "df": 4}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "y": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}}, "df": 3, "s": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}}, "df": 2}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.utils.abstract_component": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 2}}}}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {"pipepal": {"tf": 1}}, "df": 1, "s": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service": {"tf": 1}}, "df": 6}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pipepal": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 2.6457513110645907}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.4142135623730951}}, "df": 3}}, "s": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 4}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1}}, "df": 4}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.video.tasks.example_task.interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 2.449489742783178}}, "df": 21, "s": {"docs": {"pipepal": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.4142135623730951}}, "df": 15}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"pipepal.audio.tasks.example_task": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service": {"tf": 1}, "pipepal.video.tasks.example_task": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service": {"tf": 1}}, "df": 10}}}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.cli.hello_world": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}}, "df": 2}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.7320508075688772}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.4142135623730951}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {"pipepal": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "o": {"docs": {"pipepal": {"tf": 1.4142135623730951}, "pipepal.app": {"tf": 1}, "pipepal.app.hello_world": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.cli.hello_world": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.4142135623730951}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}}, "df": 14}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"pipepal": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1}}, "df": 6, "h": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1.4142135623730951}}, "df": 4, "d": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1.7320508075688772}}, "df": 10}}}}}, "b": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}}, "df": 7}}, "f": {"docs": {"pipepal.audio.tasks.input_output.interface.Interface.save_HF_dataset_to_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.interface.Interface.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface.read_HF_dataset_from_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "y": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 1}}}}}}}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {"pipepal": {"tf": 1.4142135623730951}}, "df": 1, "r": {"docs": {"pipepal": {"tf": 1.4142135623730951}}, "df": 1}}}}, "g": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1.4142135623730951}}, "df": 2, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"pipepal": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1}}, "df": 4}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.utils.abstract_component": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"pipepal.utils.abstract_component.AbstractComponent": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"pipepal": {"tf": 1}}, "df": 1, "+": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.__init__": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.get_data_uuid": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.__init__": {"tf": 1}}, "df": 5}, "s": {"docs": {"pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 3}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 3}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 3.4641016151377544}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 4.58257569495584}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.7320508075688772}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 3.605551275463989}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 3}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 3}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 3.4641016151377544}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 4.58257569495584}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1.7320508075688772}, "pipepal.video.tasks.example_task.services.example_service.service.Service.postprocess": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 3}}, "df": 16}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"pipepal.cli.main": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.__init__": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.__init__": {"tf": 1}}, "df": 2}}}, "l": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1.4142135623730951}}, "df": 2}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}, "pipepal.video.tasks.input_output.abstract_service.AbstractService.extract_audios_from_videos": {"tf": 1.4142135623730951}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.7320508075688772}, "pipepal.video.tasks.input_output.services.ffmpeg.service.get_common_directory": {"tf": 1.4142135623730951}}, "df": 5, "e": {"docs": {}, "df": 0, "d": {"docs": {"pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1.4142135623730951}}, "df": 2}}, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "p": {"3": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.extract_audio_from_video": {"tf": 2}}, "df": 1}}}}}, "docs": {}, "df": 0}}}}, "t": {"docs": {"pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 1}}, "df": 1}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pipepal": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 4.47213595499958}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 3.4641016151377544}, "pipepal.audio.tasks.example_task.interface.Interface.run": {"tf": 4.47213595499958}, "pipepal.audio.tasks.example_task.services.example_service.service": {"tf": 4.69041575982343}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 2}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 2}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 3.1622776601683795}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 4.47213595499958}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 3.4641016151377544}, "pipepal.video.tasks.example_task.interface.Interface.run": {"tf": 4.47213595499958}, "pipepal.video.tasks.example_task.services.example_service.service": {"tf": 4.69041575982343}, "pipepal.video.tasks.example_task.services.example_service.service.Service.preprocess": {"tf": 2}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 2}}, "df": 13}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pipepal.video.tasks.input_output.abstract_service.AbstractService": {"tf": 1}}, "df": 1}}}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pipepal": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pipepal.utils.abstract_component": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent": {"tf": 1.4142135623730951}, "pipepal.utils.abstract_component.AbstractComponent.__init__": {"tf": 1}, "pipepal.utils.abstract_component.AbstractComponent.read_json_schema": {"tf": 1}}, "df": 4}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"pipepal.audio.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.audio.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_audios_from_disk": {"tf": 2}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.abstract_service.AbstractService.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.audio.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_audios_from_disk": {"tf": 2.449489742783178}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.save_HF_dataset_to_disk": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.upload_HF_dataset_to_HF_hub": {"tf": 1.4142135623730951}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_local_HF_dataset": {"tf": 1}, "pipepal.audio.tasks.input_output.services.datasets.service.Service.read_HF_dataset_from_HF_hub": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface": {"tf": 1}, "pipepal.video.tasks.example_task.interface.Interface.get_service": {"tf": 1}, "pipepal.video.tasks.example_task.services.example_service.service.Service.process": {"tf": 1}, "pipepal.video.tasks.input_output.interface.Interface": {"tf": 1}, "pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 17, "s": {"docs": {"pipepal.video.tasks.input_output.services.ffmpeg.service.Service.extract_audios_from_videos": {"tf": 1}}, "df": 1}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();